{"version":3,"sources":["./src/app/teacher/teacher-form/teacher-form.component.ts","./src/app/teacher/teacher-form/teacher-form.component.html","./src/app/shared/grade.model.ts","./src/app/subject/subject.component.ts","./src/app/subject/subject.component.html","./src/app/grade/grade-form/grade-form.component.ts","./src/app/grade/grade-form/grade-form.component.html","./src/environments/environment.ts","./src/app/shared/result.service.ts","./src/app/course/course-form/course-form.component.ts","./src/app/course/course-form/course-form.component.html","./src/app/shared/course.service.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/student.service.ts","./src/app/app.module.ts","./src/app/shared/subject.model.ts","./src/app/student/student.component.ts","./src/app/student/student.component.html","./src/app/course/course.component.ts","./src/app/course/course.component.html","./src/app/shared/teacher.model.ts","./src/app/teacher/teacher.component.ts","./src/app/teacher/teacher.component.html","./src/app/shared/subject.service.ts","./src/app/shared/student.model.ts","./src/app/subject/subject-form/subject-form.component.ts","./src/app/subject/subject-form/subject-form.component.html","./src/app/grade/grade.component.ts","./src/app/grade/grade.component.html","./src/app/result/result.component.ts","./src/app/result/result.component.html","./src/app/shared/teacher.service.ts","./src/app/student/student-form/student-form.component.ts","./src/app/student/student-form/student-form.component.html","./src/app/shared/result.model.ts","./src/app/result/result-form/result-form.component.ts","./src/app/result/result-form/result-form.component.html","./src/app/shared/grade.service.ts","./src/app/shared/course.model.ts","./src/app/app-routing.module.ts","./src/app/shared/Constants.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;AAatD,MAAM,oBAAoB;IAG/B,YAAmB,OAAuB,EAAS,aAA4B;QAA5D,YAAO,GAAP,OAAO,CAAgB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAF/E,YAAO,GAAa,EAAE,CAAC;QAwBvB,6BAAwB,GAAsB,EAAE,CAAC;QACjD,4BAAuB,GAAsB,EAAE,CAAC;QAtB9C,IAAI,CAAC,wBAAwB,GAAG;YAC9B,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,8BAA8B,EAAE,qBAAqB;YACrD,cAAc,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SACxB,CAAC;QAEF,IAAI,CAAC,uBAAuB,GAAG;YAC7B,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,cAAc,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SACxB,CAAC;QACF,aAAa,CAAC,WAAW,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,UAAU,CAAC;IAC1C,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC5E,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxB;aACI;YACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACzB;IAEH,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAClC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,CACjC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAY;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;IAC/B,CAAC;;wFAtEU,oBAAoB;oGAApB,oBAAoB;;QCbjC,6EACI;QADkC,wRAAU,iBAAc,IAAC;QAC3D,sEAEA;QAAA,yEACI;QAAA,2EAAmC;QAAA,+DAAI;QAAA,4DAAQ;QAC/C,8EAEJ;QADQ,uMAAmC;QADvC,4DAEJ;QAAA,4DAAM;QAEN,yEACI;QAAA,2EAAmC;QAAA,oEAAQ;QAAA,4DAAQ;QACnD,+EAEJ;QADQ,4MAAuC;QAD3C,4DAEJ;QAAA,4DAAM;QAEN,0EACI;QAAA,4EAAmC;QAAA,oEAAQ;QAAA,4DAAQ;QACnD,gFAEJ;QAD6B,0MAAqC;QAD9D,4DAEJ;QAAA,4DAAM;QAEN,0EACI;QAAA,4EAAmC;QAAA,mEAAO;QAAA,4DAAQ;QAClD,iEACA;QAAA,+FAKA;QAHI,4NAA0C,kHAC9B,kCAAmC,IADL,sHAE5B,oCAAqC,IAFT;QAG9C,4DAA0B;QAC9B,4DAAM;QAEN,0EACI;QAAA,4EAAmC;QAAA,oEAAQ;QAAA,4DAAQ;QACnD,iEACA;QAAA,+FAGA;QADI,6NAA2C;QAC/C,4DAA0B;QAC9B,4DAAM;QAEN,0EACI;QAAA,8EAA6D;QAAA,wDACjC;QAAA,4DAAS;QACzC,4DAAM;QACV,4DAAO;;QA5C4B,0DAA6B;QAA7B,0FAA6B;QAKpD,0DAAmC;QAAnC,8FAAmC;QAMnC,0DAAuC;QAAvC,kGAAuC;QAMlB,0DAAqC;QAArC,gGAAqC;QAMrC,0DAAkC;QAAlC,2FAAkC;QAWlC,0DAAmC;QAAnC,4FAAmC;QAOC,0DACjC;QADiC,2HACjC;;6FD9BvB,oBAAoB;cANhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,MAAM,EAAE,EACP;aACF;;;;;;;;;;;;;;AERD;AAAA;AAAO,MAAM,KAAK;IAAlB;QACI,OAAE,GAAW,CAAC,CAAC;QACf,UAAK,GAAW,EAAE,CAAC;QACnB,kBAAa,GAAW,CAAC,CAAC;QAC1B,gBAAW,GAAW,CAAC,CAAC;QACxB,WAAM,GAAW,IAAI,CAAC;IAC1B,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACV;;;;;;;ICqChC,qEACI;IAAA,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC7B,sEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC,sEAAI;IAAA,wDAAyB;IAAA,4DAAK;IAClC,yEAAmC;IAA/B,2VAA6B;IAAE,6EAA2C;IAAA,kEAAM;IAAA,4DAAS;IAA7F,4DAAmC;IACnC,yEACI;IADA,2VAA6B;IAC7B,2EACI;IAAA,8EAAkF;IAAA,kEAAM;IAAA,4DAAS;IACrG,4DAAM;IACV,4DAAK;IACT,4DAAK;;;IAbG,0DAAW;IAAX,2EAAW;IACX,0DAAa;IAAb,6EAAa;IACb,0DAAa;IAAb,6EAAa;IACb,0DAAqB;IAArB,oHAAqB;IACrB,0DAAoB;IAApB,oFAAoB;IACpB,0DAA2B;IAA3B,2HAA2B;IAC3B,0DAAyB;IAAzB,0HAAyB;IAIwB,0DAAoC;IAApC,qIAAoC;;ADtCtG,MAAM,gBAAgB;IAE3B,YAAmB,OAAuB,EAAU,MAAc;QAA/C,YAAO,GAAP,OAAO,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvE,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC1B,MAAM,CAAC,2DAAS,CAAC,yBAAyB,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IACpI,CAAC;IAED,aAAa,CAAC,MAAe;QAC3B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAEA,aAAa,CAAC,MAAe;QAC3B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAC7C,MAAM,CAAC,EAAE;YACR,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC5B,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACR,CAAC;;gFApBU,gBAAgB;gGAAhB,gBAAgB;QCX7B,yEACI;QAAA,wEAAkC;QAAA,mEAAQ;QAAA,4DAAK;QACnD,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,8EAAqC;QACzC,4DAAM;QACN,yEACI;QAAA,2EACI;QAAA,2EACI;QAAA,qEACI;QAAA,sEACI;QAAA,wEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,0EACJ;QAAA,4DAAK;QACL,sEACI;QAAA,kEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,oEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,0EACJ;QAAA,4DAAK;QACL,sEACI;QAAA,qEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,+EACJ;QAAA,4DAAK;QACL,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACnB,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,6GAcK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;;QAlB+B,2DAAsB;QAAtB,4FAAsB;;6FD3B9C,gBAAgB;cAN5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,MAAM,EAAE,EACP;aACF;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIC;;;;;;;;ICWnC,6EAEI;IADA,yWAAgC;IAChC,uDACJ;IAAA,4DAAS;;;IADL,0DACJ;IADI,0FACJ;;ADHT,MAAM,kBAAkB;IAE7B,YAAmB,OAAqB,EAAS,aAA4B;QAA1D,YAAO,GAAP,OAAO,CAAc;QAAS,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAIlF,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxB;aACI;YACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACzB;IAEH,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;IACxC,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,SAAS,CAChC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAC/B,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAY;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,gEAAK,EAAE,CAAC;IACtC,CAAC;;oFAnDU,kBAAkB;kGAAlB,kBAAkB;;QCf/B,6EACI;QAD4B,uRAAU,iBAAc,IAAC;QACrD,sEACA;QAAA,2EAAmC;QAAA,gEAAK;QAAA,4DAAQ;QAChD,yEACI;QAAA,8EAEJ;QADQ,sMAAoC;QADxC,4DAEJ;QAAA,4DAAM;QACN,yEACI;QAAA,2EAAmC;QAAA,kEAAM;QAAA,4DAAQ;QACjD,0EACI;QAAA,6EAEI;QAAA,wDACJ;QAAA,4DAAS;QACT,8EACI;QAAA,uHAGS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EAAmC;QAAA,0EAAc;QAAA,4DAAQ;QACzD,0EACI;QAAA,iFAEJ;QADQ,+MAA4C;QADhD,4DAEJ;QAAA,4DAAM;QAEN,4EAAmC;QAAA,wEAAY;QAAA,4DAAQ;QACvD,0EACI;QAAA,iFAEJ;QADQ,6MAA0C;QAD9C,4DAEJ;QAAA,4DAAM;QAEN,0EACI;QAAA,8EAAuF;QAAA,wDAC3D;QAAA,4DAAS;QACzC,4DAAM;QACV,4DAAO;;;QArC4B,0DAA6B;QAA7B,0FAA6B;QAIpD,0DAAoC;QAApC,+FAAoC;QAOhC,0DACJ;QADI,yUACJ;QAEmE,0DAA2B;QAA3B,iGAA2B;QAU9F,0DAA4C;QAA5C,uGAA4C;QAM5C,0DAA0C;QAA1C,qGAA0C;QAIc,0DAAyB;QAAzB,iFAAyB;QAAE,0DAC3D;QAD2D,2HAC3D;;6FDrBvB,kBAAkB;cAP9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;gBACzC,MAAM,EAAE,EACP;aACF;;;;;;;;;;;;;;AEdD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACH;AAGA;;;AAOjC,MAAM,aAAa;IAExB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAG1B,aAAQ,GAAW,IAAI,oDAAM,EAAE,CAAC;IAF9B,CAAC;IAKF,YAAY,CAAC,OAAe;QAC3B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oDAAS,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAS,CAAC,WAAW,GAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpF,CAAC;IAED,YAAY,CAAC,EAAS;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oDAAS,CAAC,WAAW,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAS,CAAC,WAAW,CAAC;aACjC,SAAS,EAAE;aACX,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,GAAe,CAAC,CAAC;IACrD,CAAC;IAED,aAAa;QAEX,IAAI,CAAC,QAAQ,GAAG,IAAI,oDAAM,EAAE,CAAC;IAC/B,CAAC;IAEA,OAAO;QAEN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;;0EAxCU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEG;;;;AAS9C,MAAM,mBAAmB;IAE9B,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;IAAI,CAAC;IAE7C,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxB;aACI;YACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACzB;IAEH,CAAC;IAED,WAAW,CAAC,IAAY;QAErB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,CAClC,MAAM,CAAC,EAAE;YACN,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,IAAY;QAEtB,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,SAAS,CACjC,MAAM,CAAC,EAAE;YACN,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAEA,SAAS,CAAC,IAAY;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEF,aAAa;QAEX,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,kEAAM,EAAE,CAAC;IACvC,CAAC;;sFAhDU,mBAAmB;mGAAnB,mBAAmB;;QCXhC,6EACI;QAD4B,uRAAU,iBAAc,IAAC;QACrD,sEACA;QAAA,2EAAmC;QAAA,+DAAI;QAAA,4DAAQ;QAC/C,yEACI;QAAA,8EAEJ;QADQ,sMAAmC;QADvC,4DAEJ;QAAA,4DAAM;QACN,2EAAmC;QAAA,+DAAI;QAAA,4DAAQ;QAC/C,0EACI;QAAA,+EAEJ;QADQ,uMAAmC;QADvC,4DAEJ;QAAA,4DAAM;QACN,4EAAmC;QAAA,8EAAkB;QAAA,4DAAQ;QAC7D,0EACI;QAAA,+EAGJ;QADQ,mNAA+C;QAFnD,4DAGJ;QAAA,4DAAM;QACN,0EACI;QAAA,8EAAuF;QAAA,wDAC3D;QAAA,4DAAS;QACzC,4DAAM;QACV,4DAAO;;;QArB4B,0DAA6B;QAA7B,0FAA6B;QAIpD,0DAAmC;QAAnC,8FAAmC;QAKnC,0DAAmC;QAAnC,8FAAmC;QAMnC,0DAA+C;QAA/C,0GAA+C;QAGS,0DAAyB;QAAzB,iFAAyB;QAAE,0DAC3D;QAD2D,2HAC3D;;6FDTvB,mBAAmB;cAN/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,MAAM,EAAE,EACP;aACF;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACH;AAEQ;;;AAOzC,MAAM,aAAa;IAExB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAIpC,aAAQ,GAAW,IAAI,oDAAM,EAAE,CAAC;IAFhC,CAAC;IAKD,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,2DAAS,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2DAAS,CAAC,WAAW,GAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpF,CAAC;IAED,YAAY,CAAC,EAAS;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,2DAAS,CAAC,WAAW,GAAC,GAAG,GAAG,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2DAAS,CAAC,WAAW,CAAC;aACjC,SAAS,EAAE;aACX,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,GAAe,CAAC,CAAC;IACpD,CAAC;IAED,OAAO;QAEL,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;;0EA/BU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnnSA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,QAAQ,CAAC;KAClB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEACI;QAAA,0EACE;QAAA,4EACA;QAAA,4EACA;QAAA,4DAAS;QACX,4EACE;QAAA,4EACF;QAAA,4DAAS;QACT,4EACE;QAAA,4EACF;QAAA,4DAAS;QACT,4EACE;QAAA,2EACF;QAAA,4DAAS;QACT,6EACE;QAAA,4EACF;QAAA,4DAAS;QACT,6EACE;QAAA,2EACF;QAAA,4DAAS;QACT,4DAAO;QACT,4DAAM;QACN,4EAA+B;;6FDfpB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACD;AAMF;;;;;AAKjC,MAAM,cAAc;IAWzB,YACU,IAAgB,EACjB,aAA4B,EAC5B,cAA8B;QAF7B,SAAI,GAAJ,IAAI,CAAY;QACjB,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAb9B,+BAA0B,GAAG,eAAe,CAAC;QAC7C,+BAA0B,GAAG,eAAe,CAAC;QAC7C,kBAAa,GAAa,CAAC,MAAM,EAAC,QAAQ,EAAC,OAAO,CAAC,CAAC;QAE7D,gCAA2B,GAAW,EAAE,CAAC;QAEzC,4BAAuB,GAAW,IAAI,CAAC,0BAA0B,CAAC;QAElE,aAAQ,GAAY,IAAI,sDAAO,EAAE,CAAC;QAQhC,aAAa,CAAC,WAAW,EAAE,CAAC;QAC5B,cAAc,CAAC,WAAW,EAAE,CAAC;IAE9B,CAAC;IAEF,aAAa;QAEX,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,0BAA0B,CAAC;QAC/D,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;IACxC,CAAC;IAED,cAAc,CAAC,MAAc;;QAC3B,IAAI,OAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,kBAAI,IAAI,CAAC,QAAQ,0CAAE,MAAM,0CAAE,EAAE,GAAE;YAC3C,IAAI,CAAC,uBAAuB,GAAG,MAAM,CAAC,IAAI,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;YAC9B,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,WAAC,eAAC,CAAC,MAAM,0CAAE,EAAE,MAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,KAAC,CAAC;YACtG,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;YACpC,IAAI,CAAC,2BAA2B,GAAG,MAAM,CAAC,gBAAgB,GAAE,oBAAoB,CAAC;SAClF;IACH,CAAC;IAED,YAAY,CAAC,OAAgB;QAC3B,IAAI,CAAC,uBAAuB,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;QACnD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,GAAE,8BAAC,CAAC,MAAM,0CAAE,EAAE,YAAE,OAAO,CAAC,MAAM,0CAAE,EAAE,KAAC,CAAC;QAC1G,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,mCAAmC,EAAE,CAAC;IAC9E,CAAC;IAED,mCAAmC;QAEjC,IAAI,IAAI,GAAY,EAAE,CAAC;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QACzB,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,UAAU,CAAC;;YAE9C,UAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,0CAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,GACjC;gBACE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACd;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oDAAS,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/D,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAS,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvF,CAAC;IAED,aAAa,CAAC,EAAS;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oDAAS,CAAC,YAAY,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAS,CAAC,YAAY,CAAC;aAClC,SAAS,EAAE;aACX,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,GAAgB,CAAC,CAAC;IACvD,CAAC;;4EA9EU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACA;AACb;AACW;AACF;AACgB;AAEd;AACT;AACgB;AACsB;AACtB;AACsB;AACtB;AACsB;AACzB;AACqB;AACJ;AACpB;AACJ;AAC4B;AACrB;;;AA+BrD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YATJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;YAChB,mEAAc;YACd,mFAA2B,CAAC,OAAO,EAAE;YACrC,mEAAkB;SACnB;mIAIU,SAAS,mBA3BlB,2DAAY;QACZ,2EAAgB;QAChB,iGAAoB;QACpB,4EAAgB;QAChB,kGAAoB;QACpB,4EAAgB;QAChB,kGAAoB;QACpB,yEAAe;QACf,8FAAmB;QACnB,0FAAkB;QAClB,sEAAc;QACd,8FAAmB;QACnB,yEAAe,aAIf,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;QAChB,mEAAc,uFAEd,mEAAkB;6FAKT,SAAS;cA7BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,2EAAgB;oBAChB,iGAAoB;oBACpB,4EAAgB;oBAChB,kGAAoB;oBACpB,4EAAgB;oBAChB,kGAAoB;oBACpB,yEAAe;oBACf,8FAAmB;oBACnB,0FAAkB;oBAClB,sEAAc;oBACd,8FAAmB;oBACnB,yEAAe;iBAEhB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,qEAAgB;oBAChB,mEAAc;oBACd,mFAA2B,CAAC,OAAO,EAAE;oBACrC,mEAAkB;iBACnB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChDD;AAAA;AAAO,MAAM,OAAO;IAApB;QAEI,OAAE,GAAe,CAAC,CAAC;QACnB,SAAI,GAAa,EAAE,CAAC;QACpB,SAAI,GAAa,EAAE,CAAC;QACpB,YAAO,GAAW,IAAI,CAAC;QACvB,WAAM,GAAW,IAAI,CAAC;QACtB,gBAAW,GAAS,CAAC,CAAC;IAC1B,CAAC;CAAA;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AAGjB;;;;;;;IC6CpC,sEACE;IAAA,sEACE;IAAA,uDACF;IAAA,4DAAM;IACR,4DAAM;;;;;IAFF,0DACF;IADE,kIACF;;;IAIF,sEACE;IAAA,sEACE;IAAA,uDACF;IAAA,4DAAM;IACR,4DAAM;;;;;;IAFF,0DACF;IADE,uIACF;;;;IAhBN,qEACE;IAAA,qEAAI;IAAA,uDAAU;IAAA,4DAAK;IACnB,qEAAI;IAAA,uDAAY;IAAA,4DAAK;IACrB,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEACE;IAAA,oHAIM;IACR,4DAAK;IACL,sEACE;IAAA,oHAIM;IACR,4DAAK;IACL,sEAAI;IAAA,wDAAgC;IAAA,4DAAK;IACzC,sEAAI;IAAA,wDAA2D;IAAA,4DAAK;IACpE,yEAAkC;IAA9B,0VAA4B;IAAE,6EAA2C;IAAA,kEAAM;IAAA,4DAAS;IAA5F,4DAAkC;IAClC,yEAAkC;IAA9B,4VAA4B;IAAE,8EAA6C;IAAA,kEAAM;IAAA,4DAAS;IAC9F,4DAAK;IACP,4DAAK;;;;IAvBC,0DAAU;IAAV,0EAAU;IACV,0DAAY;IAAZ,4EAAY;IACZ,0DAAgB;IAAhB,gFAAgB;IAChB,0DAAoB;IAApB,kHAAoB;IAEG,0DAAiB;IAAjB,oFAAiB;IAOjB,0DAAiB;IAAjB,oFAAiB;IAMxC,0DAAgC;IAAhC,8HAAgC;IAChC,0DAA2D;IAA3D,uKAA2D;;ADlDlE,MAAM,gBAAgB;IAE3B,YAAmB,OAAuB,EAAU,MAAc,EAAS,aAA4B;QAApF,YAAO,GAAP,OAAO,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,kBAAa,GAAb,aAAa,CAAe;QAI9F,iBAAY,GAAW,EAAE,CAAC;QAHjC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAGD,QAAQ;QAEN,MAAM,CAAC,2DAAS,CAAC,yBAAyB,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IACnI,CAAC;IACD,aAAa,CAAC,MAAe;QAC3B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,MAAe;QAC3B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAC7C,MAAM,CAAC,EAAE;QACT,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QACL,IAAI,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE;YACzC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;SAC9B;IAEH,CAAC;IACD,cAAc,CAAC,SAAiB,EAAE,KAAa;;QAC7C,IAAI,OAAO,qBAAG,IAAI,CAAC,OAAO,0CAAE,cAAc,0CAAE,WAAW,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,SAAS,CAAC,CAAC;QACtF,OAAO,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC;IACvB,CAAC;IAED,qBAAqB,CAAC,OAAgB;;QACpC,IAAI,mBAAmB,GAAG,CAAC,CAAC;QAC5B,IAAI,QAAQ,qBAAG,IAAI,CAAC,OAAO,0CAAE,cAAc,0CAAE,WAAW,0CACtD,MAAM,CAAC,CAAC,CAAC,EAAE,wBAAC,OAAO,CAAC,QAAQ,0CAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAC,CAAC,CAAC;QAEhD,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,CAAC,CAAC,CAAC,EAAE;YACpB,mBAAmB,IAAI,CAAC,CAAC,WAAW,CAAC;QACvC,CAAC,EAAE;QACH,OAAO,mBAAmB;IAC5B,CAAC;IACD,QAAQ,CAAC,SAAiB,EAAE,KAAa;;QACvC,IAAI,OAAO,qBAAG,IAAI,CAAC,OAAO,0CAAE,cAAc,0CAAE,WAAW,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,SAAS,CAAC,CAAC;QACtF,IAAI,MAAM,SAAG,IAAI,CAAC,aAAa,CAAC,WAAW,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,eAAC,eAAC,CAAC,OAAO,0CAAE,EAAE,KAAI,KAAK,IAAI,QAAC,CAAC,OAAO,0CAAE,EAAE,KAAI,OAAO,CAAC,EAAE,IAAC,CAAC;QAC9G,OAAO,aAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,0CAAE,KAAK,EAAC,CAAC,OAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,0CAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;IAC7D,CAAC;;gFA9CU,gBAAgB;gGAAhB,gBAAgB;QCX7B,yEACE;QAAA,wEAAmC;QAAA,oEAAQ;QAAA,4DAAK;QAClD,4DAAM;QAEN,yEACE;QAAA,yEACE;QAAA,8EAAqC;QACvC,4DAAM;QACN,yEACE;QAAA,2EACE;QAAA,2EACE;QAAA,qEACE;QAAA,sEACE;QAAA,gEACF;QAAA,4DAAK;QACL,sEACG;QAAA,kEACH;QAAA,4DAAK;QACL,sEACE;QAAA,sEACF;QAAA,4DAAK;QACL,sEACG;QAAA,oEACH;QAAA,4DAAK;QACL,sEACE;QAAA,sEACF;QAAA,4DAAK;QACL,sEACE;QAAA,oEACF;QAAA,4DAAK;QACL,sEACE;QAAA,gFACF;QAAA,4DAAK;QACL,sEACE;QAAA,oFACF;QAAA,4DAAK;QACJ,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QAChB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACjB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,6GAwBK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QAGR,4DAAM;;QA9BsB,2DAAuB;QAAvB,6FAAuB;;6FD9BtC,gBAAgB;cAN5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,MAAM,EAAE,EACP;aACF;sQAOU,YAAY;kBAApB,mDAAK;;;;;;;;;;;;;;AElBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACV;;;;;;;;;ICsChC,qEACI;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAA2B;IAAA,4DAAK;IACpC,qEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC,sEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC,sEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC,yEAAoC;IAAhC,6VAA8B;IAAE,6EAA2C;IAAA,kEAAM;IAAA,4DAAS;IAA9F,4DAAoC;IACpC,yEAAoC;IAAhC,6VAA8B;IAAE,8EACqC;IAAA,kEAAM;IAAA,4DAAS;IACxF,4DAAK;IACT,4DAAK;;;;IAXG,0DAAa;IAAb,6EAAa;IACb,0DAAe;IAAf,+EAAe;IACf,0DAAe;IAAf,+EAAe;IACf,0DAA2B;IAA3B,2FAA2B;IAC3B,0DAA2B;IAA3B,8HAA2B;IAC3B,0DAA2B;IAA3B,8HAA2B;IAC3B,0DAA2B;IAA3B,kGAA2B;IAG3B,0DAAoE;IAApE,gNAAoE;;ADpCrF,MAAM,eAAe;IAE1B,YACS,OAAsB,EACrB,MAAc,EACf,aAA4B,EAC5B,YAA0B;QAH1B,YAAO,GAAP,OAAO,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QACf,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAEjC,YAAY,CAAC,WAAW,EAAE,CAAC;QAC3B,aAAa,CAAC,WAAW,EAAE,CAAC;IAE9B,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC3B,MAAM,CAAC,2DAAS,CAAC,wBAAwB,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IAClI,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,oDAAoD;QACpD,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,eAAe,CAAC,MAAc;QAC5B,IAAI,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;QAC/F,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,mBAAmB,IAAI,IAAI,EAAE;YAC/B,OAAO,yBAAyB,CAAC;SAClC;QACD,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,OAAO,CAAC,UAAU,CAAC;YACtC,GAAG,IAAI,CAAC,CAAC,aAAa,CAAC;QACzB,CAAC,EAAE;QACH,IAAI,OAAO,GAAG,GAAG,GAAG,mBAAmB,CAAC,MAAM,CAAC;QAC/C,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAEzC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE;YAC3B,CAAC,CAAC,aAAa,IAAI,OAAO;YAC1B,CAAC,CAAC,WAAW,IAAI,OAAO,CAC3B,CAAC;QACJ,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,OAAO,gEAAgE,CAAC;SACzE;QACD,OAAO,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAC;IACtB,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAC5C,MAAM,CAAC,EAAE;QACT,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;;8EApDU,eAAe;+FAAf,eAAe;QCb5B,yEACI;QAAA,wEAAmC;QAAA,mEAAO;QAAA,4DAAK;QACnD,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,6EAAmC;QACvC,4DAAM;QAEN,yEACI;QAAA,2EACI;QAAA,2EACI;QAAA,qEACI;QAAA,sEACI;QAAA,uEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,yEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,kEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,gFACJ;QAAA,4DAAK;QACL,sEACI;QAAA,+EACJ;QAAA,4DAAK;QACL,sEACI;QAAA,sEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,2EACJ;QAAA,4DAAK;QACL,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACnB,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,4GAYK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;;QAhBiC,2DAAqB;QAArB,2FAAqB;;6FD1B/C,eAAe;cAN3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,MAAM,EAAE,EACP;aACF;;;;;;;;;;;;;;AEZD;AAAA;AAAO,MAAM,OAAO;IAApB;QAGI,OAAE,GAAW,CAAC,CAAC;QACf,WAAM,GAAW,CAAC,CAAC;QACnB,aAAQ,GAAW,EAAE,CAAE;QACvB,SAAI,GAAW,EAAE,CAAC;IACtB,CAAC;CAAA;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACV;;;;;;;;ICqCxB,sEACI;IAAA,sEACI;IAAA,uDACJ;IAAA,4DAAM;IACV,4DAAM;;;;;IAFE,0DACJ;IADI,kIACJ;;;;IATZ,qEACI;IAAA,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEACI;IAAA,oHAIM;IACV,4DAAK;IACL,yEAAqC;IAAjC,gWAA+B;IAAE,6EAA2C;IAAA,kEAAM;IAAA,4DAAS;IAA/F,4DAAqC;IACrC,yEAAsC;IAAlC,iWAAgC;IAAE,8EAA6C;IAAA,kEAAM;IAAA,4DAAS;IAClG,4DAAK;IACT,4DAAK;;;IAdG,0DAAc;IAAd,8EAAc;IACd,0DAAgB;IAAhB,gFAAgB;IAChB,0DAAoB;IAApB,oFAAoB;IACpB,0DAAmB;IAAnB,4FAAmB;IAEM,0DAAqB;IAArB,wFAAqB;;ADxB/D,MAAM,gBAAgB;IAE3B,YACS,OAAuB,EACvB,aAA4B,EAC5B,cAA6B,EAC5B,MAAc;QAHf,YAAO,GAAP,OAAO,CAAgB;QACvB,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QAIxB,uBAAkB,GAAc,EAAE,CAAC;QAHhC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;IACxD,CAAC;IAIJ,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC1B,MAAM,CAAC,2DAAS,CAAC,yBAAyB,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IACpI,CAAC;IAED,cAAc,CAAC,SAAgB;;QAE7B,mBAAO,IAAI,CAAC,kBAAkB,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,SAAS,2CAAG,IAAI,CAAC;IACrE,CAAC;IAED,YAAY,CAAC,MAAe;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAClD,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,mCAAmC,EAAE,CAAC;QAC3E,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,kCAAkC,EAAE,CAAC;QACzE,IAAI,CAAC,OAAO,CAAC,0BAA0B,GAAG,IAAI,CAAC,6BAA6B,EAAE,CAAC;IACjF,CAAC;IAED,6BAA6B;QAE3B,IAAI,IAAI,GAAc,EAAE,CAAC;QACzB,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QACrD,IAAI,eAAe,GAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;QAEjD,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,CAAC,UAAU,CAAC;YAE1B,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC,GAAE,EAAC,CAAC,EAAE,IAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,GAAC,CAAC,EACzD;gBACE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACd;QACH,CAAC,EAAE;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,mCAAmC;QAEjC,IAAI,IAAI,GAAY,EAAE,CAAC;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC;;YAEtD,UAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,0CAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,GACjC;gBACE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACd;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,kCAAkC;QAEhC,IAAI,IAAI,GAAW,EAAE,CAAC;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC;;YAE7C,UAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,0CAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,GAChC;gBACE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACd;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAEA,aAAa,CAAC,MAAe;QAC3B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAC7C,MAAM,CAAC,EAAE;QACT,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACF,IAAI,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAC;YACxC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;SAChC;IACH,CAAC;;gFAlFU,gBAAgB;gGAAhB,gBAAgB;QCd7B,yEACI;QAAA,wEAAmC;QAAA,oEAAQ;QAAA,4DAAK;QACpD,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,8EAAqC;QACzC,4DAAM;QACN,yEACI;QAAA,2EACI;QAAA,2EACI;QAAA,qEACI;QAAA,sEACI;QAAA,gEACJ;QAAA,4DAAK;QACL,sEACG;QAAA,kEACH;QAAA,4DAAK;QACL,sEACI;QAAA,sEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,oEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,+EACJ;QAAA,4DAAK;QACL,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACnB,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,6GAeK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QAGV,4DAAM;;QArBkC,2DAAsB;QAAtB,4FAAsB;;6FDlBjD,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACD;AAIF;;;AAKjC,MAAM,cAAc;IAEzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEpC,aAAQ,GAAY,IAAI,sDAAO,EAAE,CAAC;QAElC,gCAA2B,GAAW,eAAe,CAAC;IAJd,CAAC;IAMzC,aAAa;QAEX,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,2BAA2B,GAAG,eAAe,CAAC;IACrD,CAAC;IAEA,YAAY,CAAC,MAAc;QACzB,IAAI,CAAC,2BAA2B,GAAG,MAAM,CAAC,IAAI,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;IACjC,CAAC;IAED,YAAY,CAAC,OAAgB;QAC3B,IAAI,CAAC,2BAA2B,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oDAAS,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/D,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAS,CAAC,YAAY,GAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrF,CAAC;IAED,aAAa,CAAC,EAAS;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oDAAS,CAAC,YAAY,GAAC,GAAG,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAS,CAAC,YAAY,CAAC;aAClC,SAAS,EAAE;aACX,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,GAAgB,CAAC,CAAC;IACtD,CAAC;IACD,OAAO;QAEL,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;;4EA7CU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,OAAO;IAApB;QAEI,OAAE,GAAW,CAAC,CAAC;QACf,wBAAmB,GAAW,EAAE,CAAC;QACjC,SAAI,GAAW,EAAE,CAAC;QAClB,UAAK,GAAW,IAAI,CAAC;QACrB,WAAM,GAAW,IAAI,CAAC;QACrB,aAAQ,GAAW,EAAE,CAAC;IAC3B,CAAC;CAAA;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICOlC,6EACmF;IAA/E,uUAAS,sCAA4B,IAAE;IAAwC,uDACjE;IAAA,4DAAS;;;IADwD,0DACjE;IADiE,sGACjE;;ADG3B,MAAM,oBAAoB;IAE/B,YAAmB,OAAuB,EAAS,aAA4B;QAA5D,YAAO,GAAP,OAAO,CAAgB;QAAS,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAEpF,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxB;aACI;YACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACzB;IAEH,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAClC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC7B,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,CACjC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC7B,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAY;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;IAC/B,CAAC;;wFA/CU,oBAAoB;oGAApB,oBAAoB;;QCbjC,6EACI;QAD4B,yRAAU,iBAAc,IAAC;QACrD,sEACA;QAAA,2EAAmC;QAAA,iEAAM;QAAA,4DAAQ;QACjD,yEACI;QAAA,yEACI;QAAA,4EAC+C;QAAA,uDAAwC;QAAA,4DAAS;QAChG,4EACI;QAAA,wHAE2B;QAC/B,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,4EAAmC;QAAA,gEAAI;QAAA,4DAAQ;QAC/C,iFAEJ;QADQ,wMAAmC;QADvC,4DAEJ;QAAA,4DAAM;QACN,0EACI;QAAA,4EAAmC;QAAA,gEAAI;QAAA,4DAAQ;QAC/C,iFAEJ;QADQ,wMAAmC;QADvC,4DAEJ;QAAA,4DAAM;QACN,0EACI;QAAA,4EAAmC;QAAA,wEAAY;QAAA,4DAAQ;QACvD,iFAEJ;QADQ,+MAA0C;QAD9C,4DAEJ;QAAA,4DAAM;QAEN,0EACI;QAAA,8EAAuF;QAAA,wDAC3D;QAAA,4DAAS;QACzC,4DAAM;QACV,4DAAO;;;QAjC4B,0DAA6B;QAA7B,0FAA6B;QAKL,0DAAwC;QAAxC,mHAAwC;QAEpB,0DAA2B;QAA3B,iGAA2B;QAS9F,0DAAmC;QAAnC,8FAAmC;QAKnC,0DAAmC;QAAnC,8FAAmC;QAKnC,0DAA0C;QAA1C,qGAA0C;QAIc,0DAAyB;QAAzB,iFAAyB;QAAE,0DAC3D;QAD2D,2HAC3D;;6FDnBvB,oBAAoB;cAPhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;gBAC3C,MAAM,EAAE,EACP;aACF;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACV;;;;;;;ICmChC,qEACI;IAAA,qEAAI;IAAA,uDAAY;IAAA,4DAAK;IACrB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAG/B,yEAAmC;IAA/B,0VAA6B;IAAE,6EAA2C;IAAA,kEAAM;IAAA,4DAAS;IAA7F,4DAAmC;IACnC,yEAAkC;IAA9B,yVAA4B;IAAE,8EAA6C;IAAA,kEAAM;IAAA,4DAAS;IAC9F,4DAAK;IACT,4DAAK;;;IAVG,0DAAY;IAAZ,4EAAY;IACZ,0DAAe;IAAf,+EAAe;IACf,0DAAuB;IAAvB,uFAAuB;IACvB,0DAAqB;IAArB,qFAAqB;IACrB,0DAAsB;IAAtB,sHAAsB;;AD9BvC,MAAM,cAAc;IAEzB,YAAmB,OAAqB,EAAU,MAAc;QAA7C,YAAO,GAAP,OAAO,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAErE,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC3B,MAAM,CAAC,2DAAS,CAAC,uBAAuB,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IACjI,CAAC;IAED,YAAY,CAAC,MAAa;QACxB,oDAAoD;QACpD,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,WAAW,CAAC,MAAa;QACvB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAC3C,MAAM,CAAC,EAAE;QAET,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;;4EArBU,cAAc;8FAAd,cAAc;QCX3B,yEACI;QAAA,wEAAmC;QAAA,kEAAM;QAAA,4DAAK;QAClD,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,4EAAiC;QACrC,4DAAM;QAEN,yEACI;QAAA,2EACI;QAAA,2EACI;QAAA,qEACI;QAAA,sEACI;QAAA,sEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,yEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,4EACJ;QAAA,4DAAK;QACL,sEACI;QAAA,0EACJ;QAAA,4DAAK;QACL,sEACI;QAAA,oEACJ;QAAA,4DAAK;QAIL,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACnB,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,2GAWK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QAGV,4DAAM;;QAjBgC,2DAAqB;QAArB,2FAAqB;;6FDzB9C,cAAc;cAN1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,MAAM,EAAE,EACP;aACF;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACV;;;;;;;;ICgChC,qEACI;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAChC,yEAAoC;IAAhC,6VAA8B;IAAE,6EAA2C;IAAA,kEAAM;IAAA,4DAAS;IAAA,4DAAK;IACnG,yEAAoC;IAAhC,6VAA8B;IAAE,8EAA6C;IAAA,kEAAM;IAAA,4DAAS;IAAA,4DAAK;IACzG,4DAAK;;;IAPG,0DAAa;IAAb,6EAAa;IACb,0DAAwB;IAAxB,0HAAwB;IACxB,0DAAwB;IAAxB,0HAAwB;IACxB,0DAAwB;IAAxB,wFAAwB;IACxB,0DAAuB;IAAvB,uHAAuB;;AD1BxC,MAAM,eAAe;IAE1B,YAAmB,OAAsB,EAAS,cAA8B,EAAU,MAAc;QAArF,YAAO,GAAP,OAAO,CAAe;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IACvG,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC3B,MAAM,CAAC,2DAAS,CAAC,wBAAwB,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IAClI,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAC5C,MAAM,CAAC,EAAE;QACT,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAC;YACtC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;SAChC;IACH,CAAC;IAED,cAAc,CAAC,SAAgB;;QAE7B,IAAI,OAAO,eAAG,IAAI,CAAC,cAAc,0CAAE,WAAW,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,SAAS,CAAC,CAAC;QAC7E,OAAO,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC;IACvB,CAAC;;8EA7BU,eAAe;+FAAf,eAAe;QCZ5B,yEACI;QAAA,wEAAmC;QAAA,mEAAO;QAAA,4DAAK;QACnD,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,6EAAmC;QACvC,4DAAM;QACN,yEACI;QAAA,2EACI;QAAA,2EACI;QAAA,qEACI;QAAA,sEACI;QAAA,gEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,qEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,qEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,4EACJ;QAAA,4DAAK;QACL,sEACI;QAAA,mEACJ;QAAA,4DAAK;QAEL,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACnB,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,4GAQK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;;QAZiC,2DAAsB;QAAtB,4FAAsB;;6FDrBhD,eAAe;cAN3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACD;AAIF;;;;AAMjC,MAAM,cAAc;IAEzB,YACU,IAAgB,EACjB,cAA8B;QAD7B,SAAI,GAAJ,IAAI,CAAY;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAEvC,aAAQ,GAAY,IAAI,sDAAO,EAAE,CAAC;QAClC,gBAAW,GAAc,EAAE,CAAC;QAGnB,kBAAa,GAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAG/D,oBAAe,GAAa,EAAE,CAAC;QAC/B,qBAAgB,GAAc,EAAE,CAAC;QACjC,+BAA0B,GAAc,EAAE,CAAC;IAXA,CAAC;IAa5C,aAAa;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,0BAA0B,GAAG,EAAE,CAAC;IACvC,CAAC;IAED,cAAc,CAAC,IAAY;QACzB,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;QAC7E,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjF,CAAC;IACD,gBAAgB,CAAC,MAAc;;QAC7B,IAAI,wBAAwB,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;QACnG,IAAI,CAAC,gBAAgB,SAAG,IAAI,CAAC,gBAAgB,0CAAE,MAAM,CAAC,UAAU,CAAC;YAC/D,IAAI,aAAa,GAAG,IAAI,CAAC;YACzB,wBAAwB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACzC,IAAI,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE;oBACtB,aAAa,GAAG,KAAK,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;YACH,OAAO,aAAa,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0BAA0B,SAAG,IAAI,CAAC,0BAA0B,0CAAE,MAAM,CAAC,UAAU,CAAC;YACnF,IAAI,aAAa,GAAG,IAAI,CAAC;YACzB,wBAAwB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACzC,IAAI,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE;oBACtB,aAAa,GAAG,KAAK,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;YACH,OAAO,aAAa,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oDAAS,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/D,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAS,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvF,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oDAAS,CAAC,YAAY,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAS,CAAC,YAAY,CAAC;aAClC,SAAS,EAAE;aACX,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,GAAgB,CAAC,CAAC;IACtD,CAAC;;4EAnEU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;IC+B1C,6EAEE;IADA,uUAAS,wCAA8B,IAAE;IACzC,uDACF;IAAA,4DAAS;;;IADP,0DACF;IADE,iHACF;;ADtBD,MAAM,oBAAoB;IAM/B,YAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAL1C,6BAAwB,GAAsB,EAAE,CAAC;QAEjD,gBAAW,GAAY,IAAI,CAAC;QAC5B,2BAAsB,GAAW,cAAc,CAAC;QAG9C,IAAI,CAAC,wBAAwB,GAAG;YAC9B,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,8BAA8B,EAAE,uBAAuB;YACvD,cAAc,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SACxB,CAAC;IACJ,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACvF,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxB;aACI;YACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACzB;IACH,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAClC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,CACjC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAY;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;IAC/B,CAAC;IAED,eAAe,CAAC,IAAS;QACvB,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IACD,mBAAmB,CAAC,KAAU;QAC5B,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IACD,iBAAiB,CAAC,IAAS;QACzB,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,wBAAwB;;QACtB,IAAI,OAAO,SAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,0CAAE,gBAAgB,CAAC;QAC7D,IAAI,OAAO,GAAW,CAAC,CAAC;QAExB,UAAI,CAAC,OAAO,CAAC,wBAAwB,0CAAE,OAAO,CAAC,MAAM,CAAC,EAAE;;YACtD,IAAI,WAAI,CAAC,OAAO,CAAC,yBAAyB,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,MAAK,SAAS,EAAE;gBACrF,OAAO,IAAI,MAAM,CAAC,WAAW,CAAC;aAC/B;QACH,CAAC,EAAE;QACH,IAAI,UAAU,GAAG,OAAO,GAAG,OAAO,CAAC;QAEnC,IAAI,OAAO,GAAG,OAAO,EAAE;YACrB,IAAI,CAAC,sBAAsB,GAAG,WAAW;YACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,2BAA2B,GAAG,UAAU,GAAG,yBAAyB,CAAC;SACnF;aACI,IAAI,OAAO,GAAG,OAAO,EAAE;YAC1B,IAAI,CAAC,sBAAsB,GAAG,aAAa;YAC3C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,2BAA2B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,wDAAwD,CAAC;SAC3H;aACI,IAAI,OAAO,IAAI,OAAO,EAAE;YAC3B,IAAI,CAAC,sBAAsB,GAAG,WAAW;YACzC,IAAI,CAAC,OAAO,CAAC,2BAA2B,GAAG,0BAA0B;YACrE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;IACH,CAAC;IAED,aAAa,CAAC,IAAY;;QACxB,OAAO,CAAC,IAAI,CAAC,OAAO;eACf,IAAI,CAAC,OAAO,CAAC,uBAAuB,IAAI,IAAI,CAAC,OAAO,CAAC,0BAA0B;eAC/E,WAAI,CAAC,OAAO,CAAC,yBAAyB,0CAAE,MAAM,KAAI,CAAC;eACnD,IAAI,CAAC,OAAO,CAAC,yBAAyB,IAAI,IAAI;eAC9C,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5B,CAAC;;wFA5GU,oBAAoB;oGAApB,oBAAoB;;QCZjC,yEACA;QAAA,6EACA;QADgC,yRAAU,iBAAc,IAAC;QACzD,yEACE;QAAA,sEAEA;QAAA,yEACE;QAAA,2EAAmC;QAAA,+EAAoB;QAAA,4DAAQ;QAC/D,8EAEF;QADI,sNAAkD;QADpD,4DAEF;QAAA,4DAAM;QAEN,0EACE;QAAA,4EAAmC;QAAA,gEAAI;QAAA,4DAAQ;QAC/C,gFAEF;QADI,wMAAmC;QADrC,4DAEF;QAAA,4DAAM;QAEN,0EACE;QAAA,4EAAmC;QAAA,oEAAQ;QAAA,4DAAQ;QACnD,iFAEF;QADI,4MAAuC;QADzC,4DAEF;QAAA,4DAAM;QAEN,0EACE;QAAA,4EAAmC;QAAA,kEAAM;QAAA,4DAAQ;QACjD,2EACE;QAAA,8EAEE;QAAA,wDACF;QAAA,4DAAS;QACT,+EACE;QAAA,yHAGS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,4EAAmC;QAAA,oEAAQ;QAAA,4DAAQ;QACnD,iEACA;QAAA,yEAA8D;QAAA,wDAAuC;QAAA,4DAAQ;QAC7G,+FAIA;QAFE,sOAAoD,kHAAa,2BAAuB,IAApC,wHACrC,+BAA2B,IADU,sHACM,6BAAyB,IAD/B;QAEtD,4DAA0B;QAC5B,4DAAM;QACN,4DAAM;QACN,2EACA;QAAA,0EACE;QAAA,8EAA8F;QAAA,wDAAkD;QAAA,4DAAS;QAC3J,4DAAM;QACN,4DAAM;QACR,4DAAO;QACP,4DAAM;;;QArD2B,0DAA6B;QAA7B,0FAA6B;QAKxD,0DAAkD;QAAlD,6GAAkD;QAMlD,0DAAmC;QAAnC,8FAAmC;QAMnC,0DAAuC;QAAvC,kGAAuC;QAQrC,0DACF;QADE,+GACF;QAEiE,0DAAmC;QAAnC,yGAAmC;QAW/F,0DAAsD;QAAtD,4HAAsD;QAAC,0DAAuC;QAAvC,wGAAuC;QAC5E,0DAAmC;QAAnC,4FAAmC;QASA,0DAAgC;QAAhC,4FAAgC;QAAE,0DAAkD;QAAlD,2HAAkD;;6FDxCvI,oBAAoB;cANhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;gBAC3C,MAAM,EAAE,EAAE;aACX;;;;;;;;;;;;;;AEND;AAAA;AAAO,MAAM,MAAM;IAAnB;QACI,OAAE,GAAW,CAAC,CAAC;QACf,WAAM,GAAW,IAAI,CAAC;QACtB,YAAO,GAAa,IAAI,CAAC;QACzB,YAAO,GAAY,IAAI,CAAC;QACxB,kBAAa,GAAW,CAAC,CAAC;QAC1B,UAAK,GAAU,IAAI,CAAC;IACxB,CAAC;CAAA;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;;;;;;;ICYrC,6EAEI;IADH,iUAA0B;IACvB,uDACJ;IAAA,4DAAS;;;IADL,0DACJ;IADI,0FACJ;;;;IAYA,6EAEI;IADH,mUAA0B;IACvB,uDACJ;IAAA,4DAAS;;;IADL,0DACJ;IADI,4FACJ;;;;IAYA,6EAEI;IADF,kXAAkC;IAChC,uDACJ;IAAA,4DAAS;;;IADL,0DACJ;IADI,4FACJ;;AD5BjB,MAAM,mBAAmB;IAO9B,YAAmB,OAAsB,EAChC,cAA8B,EAC9B,cAA8B,EAC9B,YAA0B,EAC1B,aAA4B;QAJlB,YAAO,GAAP,OAAO,CAAe;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAe;QANrC,mBAAc,GAAW,yCAAyC,CAAC;QAQjE,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAED,QAAQ;IACR,CAAC;IACD,QAAQ,CAAC,IAAY;QACnB,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxB;aACI;YACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACzB;IACH,CAAC;IAED,cAAc;QACZ,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC;QAClD,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;QAE1C,IAAI,MAAM,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,cAAc,GAAG,sCAAsC,CAAC;YAC7D,OAAO;SACR;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC;QAC/E,IAAI,MAAM,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,cAAc,GAAG,8CAA8C,CAAC;YACrE,OAAO;SACR;QAED,IAAI,KAAK,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,IAAI,OAAO,IAAI,CAAC,CAAC,WAAW,IAAI,OAAO,CAAC,CAAC;QACtF,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,IAAI,CAAC,cAAc,GAAG,2CAA2C,CAAC;YAClE,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;QACtC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;QACtG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,WAAC,eAAC,CAAC,MAAM,0CAAE,EAAE,KAAI,MAAM,CAAC,EAAE,IAAC,CAAC;QAElG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,EAAE,CAAC;IAClC,CAAC;IAED,eAAe,CAAC,OAAgB;QAC9B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;IAC1C,CAAC;IAED,eAAe,CAAC,OAAgB;QAC9B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;QACxC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACjH,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,CACjC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,SAAS,CAChC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAY;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;IAC/B,CAAC;;sFApGU,mBAAmB;mGAAnB,mBAAmB;;;;;;;QChBhC,6EACY;QADoB,wRAAU,iBAAc,IAAC;QAC7C,sEAEA;QAAA,yEACI;QAAA,2EAAmC;QAAA,iEAAM;QAAA,4DAAQ;QACjD,yEACI;QAAA,4EAEI;QAAA,uDACJ;QAAA,4DAAS;QACT,4EACI;QAAA,uHAGS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,4EAAmC;QAAA,mEAAO;QAAA,4DAAQ;QAClD,0EACI;QAAA,8EAEI;QAAA,wDACJ;QAAA,4DAAS;QACT,8EACI;QAAA,uHAGS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,4EAAmC;QAAA,mEAAO;QAAA,4DAAQ;QAClD,0EACI;QAAA,6EAEI;QAAA,wDACJ;QAAA,4DAAS;QACT,8EACI;QAAA,uHAGS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EAAmC;QAAA,0EAAc;QAAA,4DAAQ;QACrD,0EACI;QAAA,iFAEJ;QADM,6IAAU,oBAAgB,IAAC;QAD7B,4DAEJ;QAAA,4DAAM;QACV,0EACI;QAAA,4EAAmC;QAAA,kEAAM;QAAA,4DAAQ;QACjD,iEACA;QAAA,4EAAmC;QAAA,wDAAyB;QAAA,4DAAQ;QACxE,4DAAM;QACN,0EACI;QAAA,8EAA8D;QAAA,wDACX;QAAA,4DAAS;QAChE,4DAAM;QAClB,4DAAO;;QA7DoC,0DAA6B;QAA7B,0FAA6B;QAOhD,0DACJ;QADI,yUACJ;QAEmE,0DAA2B;QAA3B,iGAA2B;QAY1F,0DACJ;QADI,8UACJ;QAEoE,0DAA2B;QAA3B,iGAA2B;QAY3F,0DACJ;QADI,8UACJ;QAEoE,0DAA4B;QAA5B,kGAA4B;QAUjD,0DAA4C;QAA5C,uGAA4C;QAK5D,0DAAyB;QAAzB,8FAAyB;QAGE,0DACX;QADW,2HACX;;6FD5CtD,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;ydAO+B,eAAe;kBAA5C,uDAAS;mBAAC,iBAAiB;;;;;;;;;;;;;;AEvB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACL;AAEE;;;AAOjC,MAAM,YAAY;IAEvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEpC,aAAQ,GAAU,IAAI,kDAAK,EAAE,CAAC;IAFU,CAAC;IAKzC,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oDAAS,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAS,CAAC,UAAU,GAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnF,CAAC;IAED,WAAW,CAAC,EAAS;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oDAAS,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAS,CAAC,UAAU,CAAC;aAChC,SAAS,EAAE;aACX,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,GAAc,CAAC,CAAC;IACnD,CAAC;;wEAvBU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAO,MAAM,MAAM;IAAnB;QAII,OAAE,GAAe,CAAC,CAAC;QACnB,SAAI,GAAa,EAAE,CAAC;QACpB,SAAI,GAAW,EAAE,CAAC;QAClB,qBAAgB,GAAQ,CAAC,CAAC;IAC9B,CAAC;CAAA;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACQ;AACA;AACA;AACH;AACH;AACG;;;AAG5D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC/C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;CAE7C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACvBD;AAAA;AAAO,MAAM,SAAS;;AAClB,4BAA4B;AACL,mCAAyB,GAAG,2BAA2B,CAAC;AACxD,kCAAwB,GAAG,0BAA0B,CAAC;AACtD,mCAAyB,GAAG,2BAA2B,CAAC;AACxD,mCAAyB,GAAG,2BAA2B,CAAC;AACxD,kCAAwB,GAAG,0BAA0B,CAAC;AACtD,iCAAuB,GAAG,yBAAyB,CAAC;AAC3E,0BAA0B;AAG1B,kBAAkB;AACK,qBAAW,GAAG,cAAc,CAAC;AAC7B,sBAAY,GAAG,eAAe,CAAC;AAC/B,sBAAY,GAAG,eAAe,CAAC;AAC/B,sBAAY,GAAG,eAAe,CAAC;AAC/B,qBAAW,GAAG,cAAc,CAAC;AAC7B,oBAAU,GAAG,aAAa,CAAC;;;;;;;;;;;;;ACjBtD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { Course } from 'src/app/shared/course.model';\nimport { CourseService } from 'src/app/shared/course.service';\nimport { TeacherService } from \"../../shared/teacher.service\";\n\n@Component({\n  selector: 'app-teacher-form',\n  templateUrl: './teacher-form.component.html',\n  styles: [\n  ]\n})\nexport class TeacherFormComponent implements OnInit {\n  courses: Course[] = [];\n\n  constructor(public service: TeacherService, public courseService: CourseService) {\n    this.subjectsDropdownSettings = {\n      singleSelection: false,\n      idField: 'Id',\n      textField: 'Name',\n      noDataAvailablePlaceholderText: 'Select Course First',\n      limitSelection: 6,\n      itemsShowLimit: 6,\n      allowSearchFilter: true\n    };\n\n    this.coursesDropdownSettings = {\n      singleSelection: false,\n      idField: 'Id',\n      textField: 'Name',\n      limitSelection: 6,\n      itemsShowLimit: 6,\n      allowSearchFilter: true\n    };\n    courseService.refreshList();\n    this.courses = courseService.courseList;\n  }\n  subjectsDropdownSettings: IDropdownSettings = {};\n  coursesDropdownSettings: IDropdownSettings = {};\n  ngOnInit(): void {\n    this.resetFormData();\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.formData.Subjects = this.service.selectedSubjects.map(x => x.Id);\n    this.service.formData.Courses = this.service.selectedCourses.map(x => x.Id);\n    if (this.service.formData.Id == 0) {\n      this.inserRecord(form);\n    }\n    else {\n      this.updateRecord(form);\n    }\n\n  }\n\n  inserRecord(form: NgForm) {\n    this.service.postTeacher().subscribe(\n      result => {\n        this.resetForm(form);\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putTeacher().subscribe(\n      result => {\n        this.resetForm(form);\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  resetForm(form: NgForm) {\n    form.form.reset();\n    this.resetFormData();\n  }\n\n  resetFormData() {\n    this.service.resetFormData();\n  }\n}\n","<form ngNativeValidate #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"id\" [value]=\"service.formData.Id\" />\n\n    <div class=\"form-group\">\n        <label class=\"label label-default\">Name</label>\n        <input class=\"form-control form-control-lg\" placeholder=\" Name\" name=\"name\" #Name=\"ngModel\"\n            [(ngModel)]=\"service.formData.Name\" required />\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"label label-default\">Birthday</label>\n        <input type=\"date\" class=\"form-control form-control-lg\" placeholder=\"Pick Date Of Birth\" name=\"dob\" #dob=\"ngModel\"\n            [(ngModel)]=\"service.formData.Birthday\" max=\"2010-01-01\" />\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"label label-default\">Salary $</label>\n        <input class=\"form-control form-control-lg\" placeholder=\"Salary\" name=\"salary\" #salary=\"ngModel\"\n           type=\"number\" min=\"0\" [(ngModel)]=\"service.formData.Salary\" required />\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"label label-default\">Courses</label>\n        <br />\n        <ng-multiselect-dropdown [placeholder]=\"'Select Course(s)'\" name=\"coursesSelect\"\n            [settings]=\"this.coursesDropdownSettings\" [data]=\"this.courses\"\n            [(ngModel)]=\"this.service.selectedCourses\"\n            (onSelect)=\"this.service.onCourseSelect($event)\"\n            (onDeSelect)=\"this.service.onCourseDeselect($event)\">\n        </ng-multiselect-dropdown>\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"label label-default\">Subjects</label>\n        <br />\n        <ng-multiselect-dropdown [placeholder]=\"'Select Subject(s)'\" name=\"subjectSelect\"\n            [settings]=\"this.subjectsDropdownSettings\" [data]=\"this.service.subjectsForSelectedCourses\"\n            [(ngModel)]=\"this.service.selectedSubjects\">\n        </ng-multiselect-dropdown>\n    </div>    \n    \n    <div class=\"form-group\">\n        <button class=\"btn btn-info btn-lg btn-block\" type=\"submit\"> {{ service.formData.Id !=\n            0 ? 'Update' : 'Add' }} </button>\n    </div>\n</form>","\nimport { Course } from \"./course.model\";\nimport { Subject } from \"./subject.model\";\n\nexport class Grade {\n    Id: number = 0;\n    Title: string = '';\n    StartingMarks: number = 0;\n    EndingMarks: number = 0;\n    Course: Course = null;\n}","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Constants } from '../shared/Constants';\nimport { Subject } from '../shared/subject.model';\nimport { SubjectService } from '../shared/subject.service'\n\n@Component({\n  selector: 'app-subject',\n  templateUrl: './subject.component.html',\n  styles: [\n  ]\n})\nexport class SubjectComponent implements OnInit {\n\n  constructor(public service: SubjectService ,private ngZone: NgZone) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n     window[Constants.subjectComponentReference] = { component: this, zone: this.ngZone, syncData: () => this.service.refreshList() };\n  }\n\n  UpdateSubject(record: Subject) {\n    this.service.populateForm(record);\n  }\n\n   DeleteSubject(record: Subject) {\n     this.service.deleteSubject(record.Id).subscribe(\n       result => {\n        this.service.refreshList();\n       }, error => {\n         console.log(error);\n       });\n  }\n}\n","<div class=\"jumbotron py-3\">\n    <h1 class=\"display-4 text-center\">Subjects</h1>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-3\">\n        <app-subject-form></app-subject-form>\n    </div>\n    <div class=\"col-md-9\">\n        <table class=\"table\">\n            <thead class=\"thead-light\">\n                <tr>\n                    <th>\n                        Subject Id\n                    </th>\n                    <th>\n                        Subject Name\n                    </th>\n                    <th>\n                        Code\n                    </th>\n                    <th>\n                        Course\n                    </th>\n                    <th>\n                        Credit Hours\n                    </th>\n                    <th>\n                        Teacher\n                    </th>\n                    <th>\n                        Students Enrolled\n                    </th>\n                    <th>Action</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let subj of service.subjectList\">\n                    <td>{{subj.Id}}</td>\n                    <td>{{subj.Name}}</td>\n                    <td>{{subj.Code}}</td>\n                    <td>{{subj.Course?.Name}}</td>\n                    <td>{{subj.CreditHours}}</td>\n                    <td>{{subj.Teacher?.FirstName}}</td>\n                    <td>{{subj.Students?.length}}</td>\n                    <td (click)=\"UpdateSubject(subj)\"> <button type=\"button\" class=\"btn btn-info\">Update</button>\n                    <td (click)=\"DeleteSubject(subj)\"> \n                        <div class=\"tooltip-wrapper disabled\" data-title=\"Deletion not allowed. There's data linked to this item\">\n                            <button type=\"button\" class=\"btn btn-danger\" [disabled]=\"subj.Students?.length>0\">Delete</button>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Course } from 'src/app/shared/course.model';\nimport { CourseService } from 'src/app/shared/course.service';\nimport { Grade } from 'src/app/shared/grade.model';\nimport { Subject } from 'src/app/shared/subject.model';\nimport { GradeService } from \"../../shared/grade.service\";\n\n@Component({\n  selector: 'app-grade-form',\n  templateUrl: './grade-form.component.html',\n  styleUrls: ['./grade-form.component.css'],\n  styles: [\n  ]\n})\nexport class GradeFormComponent implements OnInit {\n\n  constructor(public service: GradeService, public courseService: CourseService) { }\n\n  subjectsInSelectedCourse: Subject[];\n\n  ngOnInit(): void {\n    this.resetFormData();\n  }\n\n  onSubmit(form: NgForm) {\n    if (this.service.formData.Id == 0) {\n      this.inserRecord(form);\n    }\n    else {\n      this.updateRecord(form);\n    }\n\n  }\n\n  onCourseSelect(course: Course) {\n    this.service.formData.Course = course;\n  }\n\n  inserRecord(form: NgForm) {\n    this.service.postGrade().subscribe(\n      result => {\n        this.resetForm(form);\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putGrade().subscribe(\n      result => {\n        this.resetForm(form);\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  resetForm(form: NgForm) {\n    form.form.reset();\n    this.resetFormData();\n  }\n\n  resetFormData() {\n    this.service.formData = new Grade();\n  }\n}\n","<form novalidate #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"id\" [value]=\"service.formData.Id\" />\n    <label class=\"label label-default\">Title</label>\n    <div class=\"form-group\">\n        <input class=\"form-control form-control-lg\" placeholder=\"Grade Title\" name=\"title\" #Title=\"ngModel\"\n            [(ngModel)]=\"service.formData.Title\" required />\n    </div>\n    <div class=\"form-group\">\n        <label class=\"label label-default\">Course</label>\n        <div class=\"dropdown\">\n            <button class=\"btn btn-secondary dropdown-toggle drp-dwn\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\n                aria-haspopup=\"true\" aria-expanded=\"true\">\n                {{service.formData?.Course?.Name?service.formData?.Course?.Name:'Select Course'}}\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" #selectedCourse>\n                <button type=\"button\" class=\"dropdown-item\" *ngFor=\"let course of courseService.courseList\"\n                    (click)=\"onCourseSelect(course)\" on-click=\"selectedCourse.value=course.Name\">\n                    {{course.Name}}\n                </button>\n            </div>\n        </div>\n    </div>\n    <label class=\"label label-default\">Starting Marks</label>\n    <div class=\"form-group\">\n        <input type=\"number\" min=\"0\" min=\"100\" class=\"form-control form-control-lg\" placeholder=\"Starting Marks\" name=\"startingMarks\" #StartingMarks=\"ngModel\"\n            [(ngModel)]=\"service.formData.StartingMarks\" required />\n    </div>\n\n    <label class=\"label label-default\">Ending Marks</label>\n    <div class=\"form-group\">\n        <input type=\"number\" min=\"0\" min=\"100\" class=\"form-control form-control-lg\" placeholder=\"EndingMarks\" name=\"endingMarks\" #EndingMarks=\"ngModel\"\n            [(ngModel)]=\"service.formData.EndingMarks\" required />\n    </div>\n    \n    <div class=\"form-group\">\n        <button class=\"btn btn-info btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\"> {{ service.formData.Id !=\n            0 ? 'Update' : 'Add' }} </button>\n    </div>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Constants } from './Constants';\nimport { CourseService } from './course.service';\nimport { GradeService } from './grade.service';\nimport { Result } from './result.model';\nimport { StudentService } from './student.service';\nimport { SubjectService } from './subject.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResultService {\n\n  constructor(\n    private http: HttpClient) { \n    }\n\n  formData: Result = new Result();\n  resultsList: Result[];\n\n   populateForm(student: Result) {\n    this.formData = Object.assign({}, student);\n  }\n\n  postResult() {\n    return this.http.post(Constants.resultsBase, this.formData);\n  }\n\n  putResult() {\n    return this.http.put(Constants.resultsBase+'/' + this.formData.Id, this.formData);\n  }\n\n  deleteResult(id:number) {\n    return this.http.delete(Constants.resultsBase + '/' + id);\n  }\n\n  refreshList() {\n    this.http.get(Constants.resultsBase)\n      .toPromise()\n      .then(res => this.resultsList = res as Result[]);\n  }\n\n  resetFormData()\n  {\n    this.formData = new Result();\n  }\n\n   getList()\n  {\n    this.refreshList();\n    return this.resultsList;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Course } from 'src/app/shared/course.model';\nimport { CourseService } from \"../../shared/course.service\";\n\n@Component({\n  selector: 'app-course-form',\n  templateUrl: './course-form.component.html',\n  styles: [\n  ]\n})\nexport class CourseFormComponent implements OnInit {\n\n  constructor(public service:CourseService) { }\n\n  ngOnInit(): void {\n    this.resetFormData();\n  }\n\n  onSubmit(form: NgForm) {\n    if (this.service.formData.Id == 0) {\n      this.inserRecord(form);\n    }\n    else {\n      this.updateRecord(form);\n    }\n     \n  }\n\n  inserRecord(form: NgForm)\n  {\n     this.service.postCourse().subscribe(\n      result =>{\n         this.resetForm(form);\n      }, error =>{\n        console.log(error);\n      }\n    );\n  }\n\n  updateRecord(form: NgForm)\n  {\n     this.service.putCourse().subscribe(\n      result =>{\n         this.resetForm(form);\n      }, error =>{\n        console.log(error);\n      }\n    );\n  }\n\n   resetForm(form: NgForm) {\n     form.form.reset();\n     this.resetFormData();\n   }\n  \n  resetFormData()\n  {\n    this.service.formData = new Course();\n  }\n}\n\n\n","<form novalidate #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"id\" [value]=\"service.formData.Id\" />\n    <label class=\"label label-default\">Name</label>\n    <div class=\"form-group\">\n        <input class=\"form-control form-control-lg\" placeholder=\"Course Name\" name=\"Name\" #CourseCode=\"ngModel\"\n            [(ngModel)]=\"service.formData.Name\" required maxlength=\"100\" />\n    </div>\n    <label class=\"label label-default\">Code</label>\n    <div class=\"form-group\">\n        <input class=\"form-control form-control-lg\" placeholder=\"Course Code\" name=\"code\" #CourseCode=\"ngModel\"\n            [(ngModel)]=\"service.formData.Code\" required maxlength=\"100\" />\n    </div>\n    <label class=\"label label-default\">Total Credit Hours</label>\n    <div class=\"form-group\">\n        <input  type=\"number\" min=\"0\" class=\"form-control form-control-lg\" placeholder=\"Total Credit Hours\" \n        name=\"name\" #SubjectsCount=\"ngModel\"\n            [(ngModel)]=\"service.formData.TotalCreditHours\" required />\n    </div>\n    <div class=\"form-group\">\n        <button class=\"btn btn-info btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\"> {{ service.formData.Id !=\n            0 ? 'Update' : 'Add' }} </button>\n    </div>\n</form>","import { Injectable } from '@angular/core';\nimport { Course } from \"./course.model\";\nimport { HttpClient } from '@angular/common/http';\nimport { Constants } from '../shared/Constants';\nimport { GradeService } from './grade.service';\nimport { ResultService } from './result.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n\n  constructor(private http: HttpClient) { \n    \n  }\n\n  formData: Course = new Course();\n  courseList: Course[];\n\n  postCourse() {\n    return this.http.post(Constants.coursesBase, this.formData);\n  }\n        \n  putCourse() {\n    return this.http.put(Constants.coursesBase+'/' + this.formData.Id, this.formData);\n  }\n\n  deleteCourse(id:number) {\n    return this.http.delete(Constants.coursesBase+'/' + id);\n  }\n\n  refreshList() {\n    this.http.get(Constants.coursesBase)\n      .toPromise()\n      .then(res => this.courseList = res as Course[]);\n  }\n\n  getList()\n  {\n    this.refreshList();\n    return this.courseList;\n  }\n}\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Client';\n}\n","<nav class=\"navbar navbar-light bg-light\">\n    <form class=\"form-inline\">\n      <button class=\"btn btn-outline-success\" type=\"button\"  routerLink=\"Student\">\n      Manage Students\n      </button>\n    <button class=\"btn btn-outline-success\" type=\"button\" routerLink=\"Teacher\">\n      Manage Teachers\n    </button>\n    <button class=\"btn btn-outline-success\" type=\"button\" routerLink=\"Subject\">\n      Manage Subjects\n    </button>\n    <button class=\"btn btn-outline-success\" type=\"button\" routerLink=\"Course\">\n      Manage Courses\n    </button>\n    <button class=\"btn btn-outline-success\" type=\"button\" routerLink=\"Results\">\n      Manage Results\n    </button>\n    <button class=\"btn btn-outline-success\" type=\"button\" routerLink=\"Grade\">\n      Manage Grades\n    </button>\n    </form>\n  </nav>  \n  <router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { Student } from \"./student.model\";\nimport { HttpClient } from '@angular/common/http';\nimport { CourseService } from \"./course.service\";\nimport { Course } from './course.model';\nimport { SubjectService } from './subject.service';\nimport { Subject } from './subject.model';\nimport { Constants } from './Constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  readonly courseDropDownDefaultValue = 'Select Course';\n  readonly genderDropDownDefaultValue = 'Select Gender';\n  readonly genderOptions: string []= ['Male','Female','Other'];\n  subjectsInselcetedCourse: Subject[];  \n  MultiSelcetValidationMesage: string = '';\n  selectedSubjectsByStudent: Subject[];\n  selectedCourseByStudent: string = this.courseDropDownDefaultValue;\n  studentsList: Student[];\n  formData: Student = new Student();\n\n  constructor(\n    private http: HttpClient,\n    public courseService: CourseService,\n    public subjectService: SubjectService\n  )\n  {\n    courseService.refreshList();\n    subjectService.refreshList();\n   \n   }\n\n  resetFormData()\n  {\n    this.formData = new Student();\n    this.selectedCourseByStudent = this.courseDropDownDefaultValue;\n    this.selectedSubjectsByStudent = null;\n    this.subjectsInselcetedCourse = null;\n    this.MultiSelcetValidationMesage = ''; \n  }\n\n  onSelectCourse(course: Course) {\n    if (course?.Id != this.formData?.Course?.Id) {\n      this.selectedCourseByStudent = course.Name;\n      this.formData.Course = course;\n      this.subjectsInselcetedCourse = this.subjectService.getList().filter(x => x.Course?.Id == course?.Id);\n      this.selectedSubjectsByStudent = [];\n      this.MultiSelcetValidationMesage = course.TotalCreditHours+ ' Credit Hours Left';\n    }\n  }\n  \n  populateForm(student: Student) {\n    this.selectedCourseByStudent = student.Course.Name;\n    this.formData = Object.assign({}, student);\n    this.subjectsInselcetedCourse = this.subjectService.getList().filter(x=>x.Course?.Id==student.Course?.Id);\n    this.selectedSubjectsByStudent = this.getSelctedSubjectListWithAllDetails();\n  }\n\n  getSelctedSubjectListWithAllDetails()\n  {\n    let list: Subject[]=[];\n    let form = this.formData;\n    this.subjectsInselcetedCourse.filter(function (x)\n    {\n      if (form?.Subjects?.includes(x.Id))\n      {\n        list.push(x);\n      }\n    });\n    return list;\n  }\n\n  postStudent() {\n    return this.http.post(Constants.studentsBase, this.formData);\n  }\n\n  putStudent() {\n    return this.http.put(Constants.studentsBase + '/' + this.formData.Id, this.formData);\n  }\n\n  deleteStudent(id:number) {\n    return this.http.delete(Constants.studentsBase + '/' + id);\n  }\n\n  refreshList() {\n    this.http.get(Constants.studentsBase)\n      .toPromise()\n      .then(res => this.studentsList = res as Student[]);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgMultiSelectDropDownModule } from \"ng-multiselect-dropdown\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StudentComponent } from './student/student.component';\nimport { StudentFormComponent } from './student/student-form/student-form.component';\nimport { TeacherComponent } from './teacher/teacher.component';\nimport { TeacherFormComponent } from './teacher/teacher-form/teacher-form.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { SubjectFormComponent } from './subject/subject-form/subject-form.component';\nimport { CourseComponent } from './course/course.component';\nimport { CourseFormComponent } from './course/course-form/course-form.component';\nimport { GradeFormComponent } from './grade/grade-form/grade-form.component';\nimport { GradeComponent } from './grade/grade.component';\nimport { DpDatePickerModule } from 'ng2-date-picker';\nimport { ResultFormComponent } from './result/result-form/result-form.component';\nimport { ResultComponent } from './result/result.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StudentComponent,\n    StudentFormComponent,\n    TeacherComponent,\n    TeacherFormComponent,\n    SubjectComponent,\n    SubjectFormComponent,\n    CourseComponent,\n    CourseFormComponent,\n    GradeFormComponent,\n    GradeComponent,\n    ResultFormComponent,\n    ResultComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgSelectModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    DpDatePickerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Course } from \"./course.model\";\nimport { Teacher } from \"./teacher.model\";\n\nexport class Subject {\n    Students: number[];\n    Id:       number=0;\n    Name:     string='';\n    Code:     string='';\n    Teacher:  Teacher=null;\n    Course: Course = null;\n    CreditHours: number=0;\n}","import { Component, OnInit, Input, NgZone } from '@angular/core';\nimport { Student } from '../shared/student.model';\nimport { StudentService } from '../shared/student.service';\nimport { Constants } from '../shared/Constants';\nimport { ResultService } from '../shared/result.service';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styles: [\n  ]\n})\nexport class StudentComponent implements OnInit {\n\n  constructor(public service: StudentService, private ngZone: NgZone, public resultService: ResultService) {\n    this.service.refreshList();\n    this.resultService.refreshList();\n  }\n  @Input() selectedItem: string = '';\n\n  ngOnInit(): void {\n\n    window[Constants.studentComponentReference] = { component: this, zone: this.ngZone, syncData: () => this.service.refreshList() };\n  }\n  UpdateStudent(record: Student) {\n    this.service.populateForm(record);\n  }\n\n  DeleteStudent(record: Student) {\n    this.service.deleteStudent(record.Id).subscribe(\n      result => {\n      }, error => {\n        console.log(error);\n      });\n    if (record.Id == this.service.formData.Id) {\n      this.service.resetFormData();\n    }\n\n  }\n  GetSubjectName(subjectId: number, stdId: number) {\n    let subject = this.service?.subjectService?.subjectList?.find(x => x.Id == subjectId);\n    return subject?.Name;\n  }\n\n  GetAvailedCreditHours(student: Student) {\n    let availedCreditHourse = 0;\n    let subjects = this.service?.subjectService?.subjectList?.\n      filter(x => student.Subjects?.includes(x.Id));\n\n    subjects?.forEach(x => {\n      availedCreditHourse += x.CreditHours;\n    });\n    return availedCreditHourse\n  }\n  GetGrade(subjectId: number, stdId: number) {\n    let subject = this.service?.subjectService?.subjectList?.find(x => x.Id == subjectId);\n    let result = this.resultService.resultsList?.find(x => x.Student?.Id == stdId && x.Subject?.Id == subject.Id);\n    return result?.Grade?.Title ? result?.Grade?.Title : \"TBD\";\n  }\n}\n","\n<div class=\"jumbotron py-3\">\n  <h1 class=\"display-4 text-center\"> Students</h1>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-3\">\n    <app-student-form></app-student-form>\n  </div>\n  <div class=\"col-md-9\">\n    <table class=\"table\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th>\n            Id\n          </th>\n          <th>\n             Name\n          </th>\n          <th>\n            Birthday\n          </th>\n          <th>\n             Course\n          </th>\n          <th>\n            Subjects \n          </th>\n          <th>\n            Grades\n          </th>\n          <th>\n            Total Credit Hours\n          </th>\n          <th>\n            Remaining Credit Hours\n          </th>\n           <th>Action</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let std of service.studentsList\">\n          <td>{{std.Id}}</td>\n          <td>{{std.Name}}</td>\n          <td>{{std.Birthday}}</td>\n          <td>{{std.Course?.Name}}</td>\n          <td>\n            <div *ngFor=\"let subject of std.Subjects; let counter = index\">\n              <div>\n                {{counter+1}}:{{GetSubjectName(subject)}}\n              </div>\n            </div>\n          </td>\n          <td>\n            <div *ngFor=\"let subject of std.Subjects; let counter = index\">\n              <div>\n                {{counter+1}}:{{GetGrade(subject,std.Id)}}\n              </div>\n            </div>\n          </td>\n          <td>{{std.Course?.TotalCreditHours}}</td>\n          <td>{{std.Course?.TotalCreditHours-GetAvailedCreditHours(std)}}</td>\n          <td (click)=\"UpdateStudent(std)\"> <button type=\"button\" class=\"btn btn-info\">Update</button>\n          <td (click)=\"DeleteStudent(std)\"> <button type=\"button\" class=\"btn btn-danger\">Delete</button>\n          </td>\n        </tr>\n      </tbody>  \n    </table>\n  </div>\n\n\n</div>\n\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Constants } from '../shared/Constants';\nimport { Course } from '../shared/course.model';\nimport { CourseService } from '../shared/course.service'\nimport { GradeService } from '../shared/grade.service';\nimport { ResultService } from '../shared/result.service';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styles: [\n  ]\n})\nexport class CourseComponent implements OnInit {\n\n  constructor(\n    public service: CourseService,\n    private ngZone: NgZone,\n    public resultService: ResultService,\n    public gradeService: GradeService) {\n\n    gradeService.refreshList();\n    resultService.refreshList();\n\n  }\n\n\n  ngOnInit(): void {\n    this.service.refreshList();\n    window[Constants.courseComponentReference] = { component: this, zone: this.ngZone, syncData: () => this.service.refreshList() };\n  }\n\n  PopulateForm(course: Course) {\n    //assign the object copy and not the original object\n    this.service.formData = Object.assign({}, course);\n  }\n\n  GetAverageGrade(course: Course) {\n    let resultsForTheCourse = this.resultService.resultsList.filter(x => x.Course.Id == course.Id);\n    let sum = 0;\n    if (resultsForTheCourse == null) {\n      return 'Grades not assigned yet';\n    }\n    resultsForTheCourse?.forEach(function (x) {\n      sum += x.ObtainedMarks;\n    });\n    let average = sum / resultsForTheCourse.length;\n    let grade = this.gradeService.gradesList.find\n      (\n        x => x.Course.Id == course.Id &&\n          x.StartingMarks <= average &&\n          x.EndingMarks >= average\n      );\n    if (grade == null) {\n      return 'No average grade found. Please assign all grades to the course';\n    }\n    return grade?.Title;\n  }\n\n  DeleteCourse(course: Course) {\n    this.service.deleteCourse(course.Id).subscribe(\n      result => {\n      }, error => {\n        console.log(error);\n      });\n  }\n}","<div class=\"jumbotron py-3\">\n    <h1 class=\"display-4 text-center\"> Courses</h1>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-3\">\n        <app-course-form></app-course-form>\n    </div>\n\n    <div class=\"col-md-9\">\n        <table class=\"table\">\n            <thead class=\"thead-light\">\n                <tr>\n                    <th>\n                        Course Id\n                    </th>\n                    <th>\n                        Course Name\n                    </th>\n                    <th>\n                        Code\n                    </th>\n                    <th>\n                        Ttoal Credit Hours\n                    </th>\n                    <th>\n                        Students Enrolled\n                    </th>\n                    <th>\n                        Teachers\n                    </th>\n                    <th>\n                        Average Grade\n                    </th>\n                    <th>Action</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let course of service.courseList\">\n                    <td>{{course.Id}}</td>\n                    <td>{{course.Name}}</td>\n                    <td>{{course.Code}}</td>\n                    <td>{{course.TotalCreditHours}}</td>\n                    <td>{{course.Students?.length}}</td>\n                    <td>{{course.Teachers?.length}}</td>\n                    <td>{{GetAverageGrade(course)}}</td>\n                    <td (click)=\"PopulateForm(course)\"> <button type=\"button\" class=\"btn btn-info\">Update</button>\n                    <td (click)=\"DeleteCourse(course)\"> <button type=\"button\" class=\"btn btn-danger\" \n                        [disabled]=\"course.Students?.length>0 || course.Subjects?.length>0 \">Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","export class Teacher {\n    Courses:  number[];\n    Subjects: number[];\n    Id: number = 0;\n    Salary: number = 0;\n    Birthday: string = '' ;\n    Name: string = '';\n}","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Constants } from '../shared/Constants';\nimport { Course } from '../shared/course.model';\nimport { CourseService } from '../shared/course.service';\nimport { Subject } from '../shared/subject.model';\nimport { SubjectService } from '../shared/subject.service';\nimport { Teacher } from '../shared/teacher.model';\nimport { TeacherService } from '../shared/teacher.service'\n\n@Component({\n  selector: 'app-teacher',\n  templateUrl: './teacher.component.html',\n  styleUrls: ['./teacher.component.css']\n})\nexport class TeacherComponent implements OnInit {\n\n  constructor(\n    public service: TeacherService,\n    public courseService: CourseService,\n    public subjectService:SubjectService,\n    private ngZone: NgZone) {\n     this.allOfferedSubjects = this.subjectService.getList();\n     }\n  \n  allOfferedSubjects: Subject[] = [];\n  \n  ngOnInit(): void {\n    this.service.refreshList();\n     window[Constants.teacherComponentReference] = { component: this, zone: this.ngZone, syncData: () => this.service.refreshList() };\n  }\n\n  GetSubjectName(subjectId:number)\n  {\n    return this.allOfferedSubjects?.find(x => x.Id == subjectId)?.Name;\n  }\n  \n  PopulateForm(record: Teacher) {\n    this.service.formData = Object.assign({}, record);\n    this.service.selectedSubjects = this.getSelctedSubjectListWithAllDetails();\n    this.service.selectedCourses = this.getSelctedCourseListWithAllDetails();\n    this.service.subjectsForSelectedCourses = this.getSubjectsForSelectedCourses();\n  }\n  \n  getSubjectsForSelectedCourses()\n  {\n    let list: Subject[] = [];\n    var subjects = this.service.subjectService.getList();\n    var selectedCourses=this.service.selectedCourses;\n    \n    subjects?.filter(function (x)\n    {\n      if (selectedCourses.filter(y=>y.Id==x.Course.Id).length>0)\n      {\n        list.push(x);\n      }\n    });\n    return list;\n  }\n  \n  getSelctedSubjectListWithAllDetails()\n  {\n    let list: Subject[]=[];\n    let form = this.service.formData;\n    this.service.subjectService.getList().filter(function (x)\n    {\n      if (form?.Subjects?.includes(x.Id))\n      {\n        list.push(x);\n      }\n    });\n    return list;\n  }\n\n  getSelctedCourseListWithAllDetails()\n  {\n    let list: Course[]=[];\n    let form = this.service.formData;\n    this.courseService.getList().filter(function (x)\n    {\n      if (form?.Courses?.includes(x.Id))\n      {\n        list.push(x);\n      }\n    });\n    return list;\n  }\n\n   DeleteTeacher(record: Teacher) {\n     this.service.deleteTeacher(record.Id).subscribe(\n       result => {\n       }, error => {\n         console.log(error);\n     });\n      if (record.Id == this.service.formData.Id){\n        this.service.resetFormData();\n    }\n  }\n}\n","<div class=\"jumbotron py-3\">\n    <h5 class=\"display-4 text-center\"> Teachers</h5>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-3\">\n        <app-teacher-form></app-teacher-form>\n    </div>\n    <div class=\"col-md-9\">\n        <table class=\"table\">\n            <thead class=\"thead-light\">\n                <tr>\n                    <th>\n                        Id\n                    </th>\n                    <th>\n                       Name\n                    </th>\n                    <th>\n                        Birthday\n                    </th>\n                    <th>\n                        Salary\n                    </th>\n                    <th>\n                        Assigned Subjects\n                    </th>\n                    <th>Action</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let teacher of service.teacherList\">\n                    <td>{{teacher.Id}}</td>\n                    <td>{{teacher.Name}}</td>\n                    <td>{{teacher.Birthday}}</td>\n                    <td>${{teacher.Salary}}</td>\n                    <td>\n                        <div *ngFor=\"let subject of teacher.Subjects; let counter = index\">\n                            <div>\n                                {{counter+1}}:{{GetSubjectName(subject)}}\n                            </div>\n                        </div>\n                    </td>\n                    <td (click)=\"PopulateForm(teacher)\"> <button type=\"button\" class=\"btn btn-info\">Update</button>\n                    <td (click)=\"DeleteTeacher(teacher)\"> <button type=\"button\" class=\"btn btn-danger\">Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n\n</div>","import { Injectable } from '@angular/core';\nimport { Subject } from \"./subject.model\";\nimport { HttpClient } from '@angular/common/http';\nimport { CourseService } from './course.service';\nimport { Course } from './course.model';\nimport { Constants } from './Constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n\n  constructor(private http: HttpClient) { }\n\n  formData: Subject = new Subject();\n  subjectList: Subject[];\n  courseDropDownCelectedValue: string = 'Select Course';\n\n  resetFormData()\n  {\n    this.formData = new Subject();\n    this.courseDropDownCelectedValue = 'Select Course';\n  }\n\n   selectCourse(course: Course) {\n     this.courseDropDownCelectedValue = course.Name;\n     this.formData.Course = course;\n  }\n\n  populateForm(subject: Subject) {\n    this.courseDropDownCelectedValue = subject.Course.Name;\n    this.formData = Object.assign({}, subject);\n  }s\n\n  postSubject() {\n    return this.http.post(Constants.subjectsBase, this.formData);\n  }\n\n  putSubject() {\n    return this.http.put(Constants.subjectsBase+'/' + this.formData.Id, this.formData);\n  }\n\n  deleteSubject(id:number) {\n    return this.http.delete(Constants.subjectsBase+'/' + id);\n  }\n\n  refreshList() {\n    this.http.get(Constants.subjectsBase)\n      .toPromise()\n      .then(res => this.subjectList = res as Subject[]);\n  }\n  getList()\n  {\n    this.refreshList();\n    return this.subjectList;\n  }\n}\n ","import { Course } from \"./course.model\";\nimport { Grade } from \"./grade.model\";\n\nexport class Student {\n    Subjects: number[];\n    Id: number = 0;\n    RegisterationNumber: string = '';\n    Name: string = '';\n    Grade:    Grade=null;\n    Course: Course = null;\n     Birthday: string = '';\n}\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { CourseService } from 'src/app/shared/course.service';\nimport { SubjectService } from \"../../shared/subject.service\";\n\n@Component({\n  selector: 'app-subject-form',\n  templateUrl: './subject-form.component.html',\n  styleUrls: ['./subject-form.component.css'],\n  styles: [\n  ]\n})\nexport class SubjectFormComponent implements OnInit {\n\n  constructor(public service: SubjectService, public courseService: CourseService) { }\n\n  ngOnInit(): void {\n    this.resetFormData();\n  }\n\n  onSubmit(form: NgForm) {\n    if (this.service.formData.Id == 0) {\n      this.inserRecord(form);\n    }\n    else {\n      this.updateRecord(form);\n    }\n\n  }\n\n  inserRecord(form: NgForm) {\n    this.service.postSubject().subscribe(\n      result => {\n        this.resetForm(form);\n        this.service.refreshList();\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putSubject().subscribe(\n      result => {\n        this.resetForm(form);\n        this.service.refreshList();\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  resetForm(form: NgForm) {\n    form.form.reset();\n    this.resetFormData();\n  }\n\n  resetFormData() {\n    this.service.resetFormData();\n  }\n}\n\n","<form novalidate #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"id\" [value]=\"service.formData.Id\" />\n    <label class=\"label label-default\">Course</label>\n    <div class=\"form-group\">\n        <div class=\"dropdown\">\n            <button class=\"btn btn-secondary dropdown-toggle drp-dwn\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\n                aria-haspopup=\"true\" aria-expanded=\"true\"> {{service.courseDropDownCelectedValue}} </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" #courseSelected>\n                <button type=\"button\" class=\"dropdown-item\" *ngFor=\"let course of courseService.courseList\"\n                    (click)=\"service.selectCourse(course);\" on-click=\"courseSelected.value=course\">{{course.Name +' '+\n                    course.Code }}</button>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"label label-default\">Name</label>\n        <input class=\"form-control form-control-lg\" placeholder=\"Subject Name\" name=\"name\" #subjectName=\"ngModel\"\n            [(ngModel)]=\"service.formData.Name\" required maxlength=\"100\" />\n    </div>\n    <div class=\"form-group\">\n        <label class=\"label label-default\">Code</label>\n        <input class=\"form-control form-control-lg\" placeholder=\"Subject Code\" name=\"code\" #subjectCode=\"ngModel\"\n            [(ngModel)]=\"service.formData.Code\" required maxlength=\"100\" />\n    </div>\n    <div class=\"form-group\">\n        <label class=\"label label-default\">Credit Hours</label>\n        <input class=\"form-control form-control-lg\" placeholder=\"Credit Hours\" name=\"creditHours\" #creditHours=\"ngModel\"\n            [(ngModel)]=\"service.formData.CreditHours\" required type=\"number\" max=\"3\" min=\"1\"/>\n    </div>\n   \n    <div class=\"form-group\">\n        <button class=\"btn btn-info btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\"> {{ service.formData.Id !=\n            0 ? 'Update' : 'Add' }} </button>\n    </div>\n</form>","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Constants } from '../shared/Constants';\nimport { Grade } from '../shared/grade.model';\nimport { GradeService } from '../shared/grade.service'\n\n@Component({\n  selector: 'app-grade',\n  templateUrl: './grade.component.html',\n  styles: [\n  ]\n})\nexport class GradeComponent implements OnInit {\n\n  constructor(public service: GradeService, private ngZone: NgZone) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n    window[Constants.gradeComponentReference] = { component: this, zone: this.ngZone, syncData: () => this.service.refreshList() };\n  }\n\n  PopulateForm(record: Grade) {\n    //assign the object copy and not the original object\n    this.service.formData = Object.assign({}, record);\n  }\n\n  DeleteGrade(record: Grade) {\n    this.service.deleteGrade(record.Id).subscribe(\n      result => {\n\n      }, error => {\n        console.log(error);\n      });\n  }\n}\n","<div class=\"jumbotron py-3\">\n    <h1 class=\"display-4 text-center\"> Grades</h1>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-3\">\n        <app-grade-form></app-grade-form>\n    </div>\n\n    <div class=\"col-md-9\">\n        <table class=\"table\">\n            <thead class=\"thead-light\">\n                <tr>\n                    <th>\n                        Grade Id\n                    </th>\n                    <th>\n                        Grade Title\n                    </th>\n                    <th>\n                        Starting Marks  \n                    </th>\n                    <th>\n                        Ending Marks\n                    </th>\n                    <th>\n                        Course\n                    </th>\n                    <!-- <th>\n                        Subject\n                    </th> -->\n                    <th>Action</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let grade of service.gradesList\">\n                    <td>{{grade.Id}}</td>\n                    <td>{{grade.Title}}</td>\n                    <td>{{grade.StartingMarks}}</td>\n                    <td>{{grade.EndingMarks}}</td>\n                    <td>{{grade.Course?.Name}}</td>\n                     <!-- <td>{{grade.Subject?.Name}}</td> -->\n                    \n                    <td (click)=\"PopulateForm(grade)\"> <button type=\"button\" class=\"btn btn-info\">Update</button>\n                    <td (click)=\"DeleteGrade(grade)\"> <button type=\"button\" class=\"btn btn-danger\">Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n\n</div>","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Constants } from '../shared/Constants';\nimport { Result } from '../shared/result.model';\nimport { ResultService } from '../shared/result.service';\nimport { SubjectService } from '../shared/subject.service';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\n\nexport class ResultComponent implements OnInit {\n\n  constructor(public service: ResultService, public subjectService: SubjectService, private ngZone: NgZone)\n  {}\n  \n  ngOnInit(): void {\n    this.service.refreshList();\n    window[Constants.resultComponentReference] = { component: this, zone: this.ngZone, syncData: () => this.service.refreshList() };\n  }\n  \n  UpdateResult(record: Result) {\n    this.service.populateForm(record);\n  }\n\n  DeleteResult(record: Result) {\n    this.service.deleteResult(record.Id).subscribe(\n      result => {\n      }, error => {\n        console.log(error);\n    });\n    if (record.Id == this.service.formData.Id){\n        this.service.resetFormData();\n    }\n  }\n  \n  GetSubjectName(subjectId:number)\n  {\n    let subject = this.subjectService?.subjectList?.find(x => x.Id == subjectId);\n    return subject?.Name;\n  }\n}\n\n","<div class=\"jumbotron py-3\">\n    <h5 class=\"display-4 text-center\"> Results</h5>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-3\">\n        <app-result-form></app-result-form>\n    </div>\n    <div class=\"col-md-9\">\n        <table class=\"table\">\n            <thead class=\"thead-light\">\n                <tr>\n                    <th>\n                        Id\n                    </th>\n                    <th>\n                        Student\n                    </th>\n                    <th>\n                        Subject\n                    </th>\n                    <th>\n                        Obtained Marks\n                    </th>\n                    <th>\n                        Grade\n                    </th>\n                    \n                    <th>Action</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let result of service.resultsList\">\n                    <td>{{result.Id}}</td>\n                    <td>{{result.Student?.Name}}</td>\n                    <td>{{result.Subject?.Name}}</td>\n                    <td>{{result.ObtainedMarks}}</td>\n                    <td>{{result.Grade?.Title}}</td>\n                    <td (click)=\"UpdateResult(result)\"> <button type=\"button\" class=\"btn btn-info\">Update</button></td>\n                    <td (click)=\"DeleteResult(result)\"> <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Teacher } from \"./teacher.model\";\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from './subject.model';\nimport { SubjectService } from './subject.service';\nimport { Constants } from './Constants';\nimport { Course } from './course.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeacherService {\n\n  constructor(\n    private http: HttpClient,\n    public subjectService: SubjectService) { }\n\n  formData: Teacher = new Teacher();\n  teacherList: Teacher[] = [];\n\n\n  readonly genderOptions: string[] = ['Male', 'Female', 'Other'];\n\n\n  selectedCourses: Course[] = [];\n  selectedSubjects: Subject[] = [];\n  subjectsForSelectedCourses: Subject[] = [];\n\n  resetFormData() {\n    this.formData = new Teacher();\n    this.selectedSubjects = [];\n    this.selectedCourses = [];\n    this.subjectsForSelectedCourses = [];\n  }\n\n  onCourseSelect(item: Course) {\n    var list = this.subjectService.getList().filter(x => x.Course.Id == item.Id);\n    this.subjectsForSelectedCourses = this.subjectsForSelectedCourses.concat(list);\n  }\n  onCourseDeselect(course: Course) {\n    let subjectsInSelectedCourse = this.subjectService.getList().filter(x => x.Course.Id == course.Id);\n    this.selectedSubjects = this.selectedSubjects?.filter(function (x) {\n      var shouldInclude = true;\n      subjectsInSelectedCourse.forEach(element => {\n        if (element.Id == x.Id) {\n          shouldInclude = false;\n        }\n      });\n      return shouldInclude;\n    });\n\n    this.subjectsForSelectedCourses = this.subjectsForSelectedCourses?.filter(function (x) {\n      var shouldInclude = true;\n      subjectsInSelectedCourse.forEach(element => {\n        if (element.Id == x.Id) {\n          shouldInclude = false;\n        }\n      });\n      return shouldInclude;\n    });\n  }\n\n  postTeacher() {\n    return this.http.post(Constants.teachersBase, this.formData);\n  }\n\n  putTeacher() {\n    return this.http.put(Constants.teachersBase + '/' + this.formData.Id, this.formData);\n  }\n\n  deleteTeacher(id: number) {\n    return this.http.delete(Constants.teachersBase + '/' + id);\n  }\n\n  refreshList() {\n    this.http.get(Constants.teachersBase)\n      .toPromise()\n      .then(res => this.teacherList = res as Teacher[]);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { StudentService } from \"../../shared/student.service\";\nimport { Course } from 'src/app/shared/course.model';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\n@Component({\n  selector: 'app-student-form',\n  templateUrl: './student-form.component.html',\n  styleUrls: ['./student-form.component.css'],\n  styles: [],\n})\nexport class StudentFormComponent implements OnInit {\n  subjectsDropdownSettings: IDropdownSettings = {};\n  selectedCourse: Course;\n  isFormValid: boolean = true;\n  subjectsSelectionClass: string = 'text-success';\n\n  constructor(public service: StudentService) {\n    this.subjectsDropdownSettings = {\n      singleSelection: false,\n      idField: 'Id',\n      textField: 'Name',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      noDataAvailablePlaceholderText: 'Select A Course First',\n      limitSelection: 6,\n      itemsShowLimit: 6,\n      allowSearchFilter: true\n    };\n  }\n\n\n  ngOnInit(): void {\n    this.resetFormData();\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.formData.Subjects = this.service.selectedSubjectsByStudent.map(a => a.Id);\n    if (this.service.formData.Id == 0) {\n      this.inserRecord(form);\n    }\n    else {\n      this.updateRecord(form);\n    }\n  }\n\n  inserRecord(form: NgForm) {\n    this.service.postStudent().subscribe(\n      result => {\n        this.resetForm(form);\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putStudent().subscribe(\n      result => {\n        this.resetForm(form);\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  resetForm(form: NgForm) {\n    form.form.reset();\n    this.resetFormData();\n  }\n\n  resetFormData() {\n    this.service.resetFormData();\n  }\n\n  onSubjectSelect(item: any) {\n    this.validateSubjectSelection();\n  }\n  onSelectAllSubjects(items: any) {\n    this.validateSubjectSelection();\n  }\n  onSubjectDeselect(item: any) {\n    this.validateSubjectSelection();\n  }\n\n  validateSubjectSelection() {\n    let allowed = this.service.formData.Course?.TotalCreditHours;\n    let availed: number = 0;\n\n    this.service.subjectsInselcetedCourse?.forEach(course => {\n      if (this.service.selectedSubjectsByStudent?.find(x => x.Id == course.Id) != undefined) {\n        availed += course.CreditHours;\n      }\n    });\n    let difference = allowed - availed;\n\n    if (availed < allowed) {\n      this.subjectsSelectionClass = 'text-info'\n      this.isFormValid = true;\n      this.service.MultiSelcetValidationMesage = difference + ' Credit Hourse Remained';\n    }\n    else if (availed > allowed) {\n      this.subjectsSelectionClass = 'text-danger'\n      this.isFormValid = false;\n      this.service.MultiSelcetValidationMesage = (availed - allowed) + ' Extra Credit Hour(s) Availed, Remove Extra Subject(s)';\n    }\n    else if (availed == allowed) {\n      this.subjectsSelectionClass = 'text-info'\n      this.service.MultiSelcetValidationMesage = 'All Credit Hours Availed'\n      this.isFormValid = true;\n    }\n  }\n\n  isFormInvalid(form: NgForm) {\n    return (form.invalid\n      || this.service.selectedCourseByStudent == this.service.courseDropDownDefaultValue\n      || this.service.selectedSubjectsByStudent?.length == 0\n      || this.service.selectedSubjectsByStudent == null\n      || (!this.isFormValid));\n  }\n}\n","<div class=\"row\">\n<form novalidate #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n<div class=\"col col-lg-12\">\n  <input type=\"hidden\" name=\"id\" [value]=\"service.formData.Id\"/>\n\n  <div class=\"form-group\">\n    <label class=\"label label-default\">Registeration Number</label>\n    <input class=\"form-control form-control-lg\" placeholder=\"Registeration Number\" name=\"registeration\" #registeration=\"ngModel\"\n      [(ngModel)]=\"service.formData.RegisterationNumber\" required />\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"label label-default\">Name</label>\n    <input class=\"form-control form-control-lg\" placeholder=\"Name\" name=\"name\" #Name=\"ngModel\"\n      [(ngModel)]=\"service.formData.Name\" required />\n  </div>\n  \n  <div class=\"form-group\">\n    <label class=\"label label-default\">Birthday</label>\n    <input type=\"date\" class=\"form-control form-control-lg\" placeholder=\"Pick Date Of Birth\" name=\"dob\" #dob=\"ngModel\"\n      [(ngModel)]=\"service.formData.Birthday\" max=\"2010-01-01\" />\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"label label-default\">Course</label>\n    <div class=\"dropdown\">\n      <button class=\"btn btn-secondary dropdown-toggle drp-dwn\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n        aria-expanded=\"true\">\n        {{service.selectedCourseByStudent}}\n      </button>\n      <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" #courseSelected>\n        <button type=\"button\" class=\"dropdown-item\" *ngFor=\"let course of service.courseService.courseList\"\n          (click)=\"service.onSelectCourse(course);\" on-click=\"courseSelected.value=course\">\n          {{course.Name +' '+ course.Code }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"label label-default\">Subjects</label>\n    <br />\n    <label class=\"label label-default {{subjectsSelectionClass}}\">{{service.MultiSelcetValidationMesage}}</label>\n    <ng-multiselect-dropdown [placeholder]=\"'Select Subject(s)'\" name=\"subjectSelect\"\n      [settings]=\"this.subjectsDropdownSettings\" [data]=\"this.service.subjectsInselcetedCourse\"\n      [(ngModel)]=\"this.service.selectedSubjectsByStudent\" (onSelect)=\"onSubjectSelect($event)\"\n      (onSelectAll)=\"onSelectAllSubjects($event)\" (onDeSelect)=\"onSubjectDeselect($event)\">\n    </ng-multiselect-dropdown>\n  </div>\n  </div>\n  <div class=\"col col-md-12\">\n  <div class=\"form-group\">\n    <button class=\"btn btn-info btn-lg btn-block\" type=\"submit\" [disabled]=\"isFormInvalid(form)\"> {{ service.formData.Id != 0 ? 'Update' : 'Add' }} </button>\n  </div>\n  </div>\n</form>\n</div>","import { Course } from \"./course.model\";\nimport { Grade } from \"./grade.model\";\nimport { Student } from \"./student.model\";\nimport { Subject } from \"./subject.model\";\n\nexport class Result {\n    Id: number = 0;\n    Course: Course = null;\n    Student:    Student=null;\n    Subject: Subject = null;\n    ObtainedMarks: number = 0;\n    Grade: Grade = null;\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Course } from 'src/app/shared/course.model';\nimport { CourseService } from 'src/app/shared/course.service';\nimport { Grade } from 'src/app/shared/grade.model';\nimport { GradeService } from 'src/app/shared/grade.service';\nimport { ResultService } from 'src/app/shared/result.service';\nimport { Student } from 'src/app/shared/student.model';\nimport { StudentService } from 'src/app/shared/student.service';\nimport { Subject } from 'src/app/shared/subject.model';\nimport { SubjectService } from 'src/app/shared/subject.service';\n\n@Component({\n  selector: 'app-result-form',\n  templateUrl: './result-form.component.html',\n  styleUrls: ['./result-form.component.css']\n})\nexport class ResultFormComponent implements OnInit {\n\n  subjectsInSelectedCourse: Subject[];\n  studentsInSelectedSubject: Student[];\n  gradesInSelectedCourse: Grade[];\n  gradeLabelText: string = 'Enter obtained marks to calculate grade';\n  @ViewChild('selectedSubject') selectedSubject;\n  constructor(public service: ResultService,\n    public studentService: StudentService,\n    public subjectService: SubjectService,\n    public gradeService: GradeService,\n    public courseService: CourseService\n  ) {\n    this.studentService.refreshList();\n    this.subjectService.refreshList();\n    this.gradeService.refreshList();\n    this.courseService.refreshList();\n  }\n\n  ngOnInit(): void {\n  }\n  onSubmit(form: NgForm) {\n    if (this.service.formData.Id == 0) {\n      this.inserRecord(form);\n    }\n    else {\n      this.updateRecord(form);\n    }\n  }\n\n  calculateGrade() {\n    let obMarks = this.service.formData.ObtainedMarks;\n    let course = this.service.formData.Course;\n\n    if (course == null) {\n      this.gradeLabelText = \"Select a Course, and a subject first\";\n      return;\n    }\n\n    let grades = this.gradeService.gradesList.filter(x => x.Course.Id == course.Id)\n    if (grades == null) {\n      this.gradeLabelText = \"No grades available for the selected subject\";\n      return;\n    }\n\n    let grade = grades?.find(x => x.StartingMarks <= obMarks && x.EndingMarks >= obMarks);\n    if (grade == null) {\n      this.gradeLabelText = \"No grade available for given marks range \";\n      return;\n    }\n    this.service.formData.Grade = grade;\n    this.gradeLabelText = grade?.Title;\n  }\n\n  onCourseSelect(course: Course) {\n    this.service.formData.Course = course;\n    this.subjectsInSelectedCourse = this.subjectService.subjectList.filter(x => x.Course.Id == course.Id);\n    this.gradesInSelectedCourse = this.gradeService.gradesList.filter(x => x.Course?.Id == course.Id);\n\n    this.service.formData.Student = null;\n    this.service.formData.Subject = null;\n    this.selectedSubject.value = '';\n  }\n\n  onStudentSelect(student: Student) {\n    this.service.formData.Student = student;\n  }\n\n  onSubjectSelect(subject: Subject) {\n    this.service.formData.Subject = subject;\n    this.studentsInSelectedSubject = this.studentService.studentsList.filter(x => x.Subjects.includes(subject.Id));\n  }\n\n  inserRecord(form: NgForm) {\n    this.service.postResult().subscribe(\n      result => {\n        this.resetForm(form);\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putResult().subscribe(\n      result => {\n        this.resetForm(form);\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  resetForm(form: NgForm) {\n    form.form.reset();\n    this.resetFormData();\n  }\n\n  resetFormData() {\n    this.service.resetFormData();\n  }\n}\n","\n<form novalidate #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n            <input type=\"hidden\" name=\"id\" [value]=\"service.formData.Id\" />\n\n            <div class=\"form-group\">\n                <label class=\"label label-default\">Course</label>\n                <div class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle drp-dwn\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"true\">\n                        {{service.formData?.Course?.Name?service.formData?.Course?.Name:'Select Course'}}\n                    </button>\n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" #selectedCourse>\n                        <button type=\"button\" class=\"dropdown-item\" *ngFor=\"let course of courseService.courseList\"\n                         (click)=\"calculateGrade()\"   (click)=\"onCourseSelect(course)\" on-click=\"selectedCourse.value=course.Name\">\n                            {{course.Name}}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"label label-default\">Subject</label>\n                <div class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle drp-dwn\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\n                        style=\"width: 250px; max-width:100%\">\n                        {{service.formData?.Subject?.Name?service.formData?.Subject?.Name:'Select Subject'}}\n                    </button>\n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" #selectedSubject>\n                        <button type=\"button\" class=\"dropdown-item\" *ngFor=\"let subject of subjectsInSelectedCourse\"\n                         (click)=\"calculateGrade()\" (click)=\"onSubjectSelect(subject)\" on-click=\"selectedSubject.value=subject.Name\">\n                            {{subject.Name}}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"label label-default\">Student</label>\n                <div class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle drp-dwn\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"true\">\n                        {{service.formData?.Student?.Name?service.formData?.Student?.Name:'Select Student'}}\n                    </button>\n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" #selectedStudent>\n                        <button type=\"button\" class=\"dropdown-item\" *ngFor=\"let student of studentsInSelectedSubject\"\n                          (click)=\"onStudentSelect(student)\" on-click=\"selectedStudent.value=student.Name\">\n                            {{student.Name}}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <label class=\"label label-default\">Obtained Marks</label>\n                <div class=\"form-group\">\n                    <input type=\"number\" min=\"0\" max=\"100\" class=\"form-control form-control-lg\" placeholder=\"Marks\" name=\"marks\"\n                      (change)=\"calculateGrade()\" #Marks=\"ngModel\" [(ngModel)]=\"service.formData.ObtainedMarks\" required />\n                </div>\n            <div class=\"form-group\">\n                <label class=\"label label-default\">Grade:</label>\n                <br/>\n                <label class=\"label label-default\">({{this.gradeLabelText}})</label>\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-info btn-lg btn-block\" type=\"submit\" > {{\n                    service.formData.Id != 0 ? 'Update' : 'Add' }} </button>\n            </div>\n</form>","import { Injectable } from '@angular/core';\nimport { Grade } from \"./grade.model\";\nimport { HttpClient } from '@angular/common/http';\nimport { Constants } from './Constants';\nimport { CourseService } from './course.service';\nimport { SubjectService } from './subject.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GradeService {\n\n  constructor(private http: HttpClient) { }\n\n  formData: Grade = new Grade();\n  gradesList: Grade[];\n\n  postGrade() {\n    return this.http.post(Constants.gradesBase, this.formData);\n  }\n\n  putGrade() {\n    return this.http.put(Constants.gradesBase+'/' + this.formData.Id, this.formData);\n  }\n\n  deleteGrade(id:number) {\n    return this.http.delete(Constants.gradesBase + '/' + id);\n  }\n\n  refreshList() {\n    this.http.get(Constants.gradesBase)\n      .toPromise()\n      .then(res => this.gradesList = res as Grade[]);\n  }\n}\n","export class Course {\n    Students: number[];\n    Subjects: number[];\n    Teachers: number[];\n    Id:       number=0;\n    Name:     string='';\n    Code: string = '';\n    TotalCreditHours:number=0;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentComponent } from './student/student.component';\nimport { TeacherComponent } from './teacher/teacher.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { CourseComponent } from './course/course.component';\nimport { GradeComponent } from './grade/grade.component';\nimport { ResultComponent } from './result/result.component';\n\n\nconst routes: Routes = [\n  { path: 'Student', component: StudentComponent },\n  { path: 'Teacher', component: TeacherComponent },\n  { path: 'Subject', component: SubjectComponent },\n  { path: 'Course', component: CourseComponent },\n  { path: 'Results', component: ResultComponent },\n  { path: 'Grade', component: GradeComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export class Constants {   \r\n    // ComponentReferences Start\r\n    public static readonly studentComponentReference = 'studentComponentReference';\r\n    public static readonly courseComponentReference = 'courseComponentReference';\r\n    public static readonly subjectComponentReference = 'subjectComponentReference';\r\n    public static readonly teacherComponentReference = 'teacherComponentReference';\r\n    public static readonly resultComponentReference = 'resultComponentReference';\r\n    public static readonly gradeComponentReference = 'gradeComponentReference';\r\n    // ComponentReferences End\r\n\r\n\r\n    // Endpoints Start\r\n    public static readonly coursesBase = '/api/courses';\r\n    public static readonly subjectsBase = '/api/subjects';\r\n    public static readonly teachersBase = '/api/teachers';\r\n    public static readonly studentsBase = '/api/students';\r\n    public static readonly resultsBase = '/api/results';\r\n    public static readonly gradesBase = '/api/grades';\r\n    // Endpoints End\r\n}\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}